[ Course
    { courseName = CourseName "CO" "227"
    , courseId = "003887"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Optimization (Non-Specialist Level)"
    , courseDescription = "A broad introduction to the field of optimization, discussing applications, and solution techniques. Mathematical models for real life applications; algorithms: simplex, cutting plane, and branch & bound; linear programming duality. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "250" )
                , ReqCoCourse
                    ( CourseName "CO" "255" )
                , ReqCoCourse
                    ( CourseName "CO" "352" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "250"
    , courseId = "003895"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Optimization"
    , courseDescription = "A broad introduction to the field of optimization, discussing applications, and solution techniques. Mathematical models for real life applications; algorithms; aspects of computational complexity; geometry; linear programming duality, focusing on the development of algorithms. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqCourse
                    ( CourseName "MATH" "106" ) Nothing
                , ReqCourse
                    ( CourseName "MATH" "114" ) Nothing
                , ReqCourse
                    ( CourseName "MATH" "115" )
                    ( Just 70.0 )
                ]
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNote "cumulative overall average of at least 60%"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "227" )
                , ReqCoCourse
                    ( CourseName "CO" "255" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "255"
    , courseId = "003897"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Optimization (Advanced Level)"
    , courseDescription = "Linear optimization: feasibility theorems, duality, the simplex algorithm. Discrete optimization: integer linear programming, cutting planes, network flows. Continuous optimization: local and global optima, feasible directions, convexity, necessary optimality conditions."
    , courseNote = "[Note: CO 255 may be substituted for CO 250 whenever the latter is a requirement in an Honours plan. Offered: W]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "227" )
                , ReqCoCourse
                    ( CourseName "CO" "250" )
                , ReqCoCourse
                    ( CourseName "CO" "352" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "327"
    , courseId = "003890"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Deterministic OR Models (Non-Specialist Level)"
    , courseDescription = "An applications-oriented course that illustrates how various mathematical models and methods of optimization can be used to solve problems arising in business, industry, and science. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "227" ) Nothing
            , ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "352" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "CO" "370" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "330"
    , courseId = "003891"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Combinatorial Enumeration"
    , courseDescription = "The algebra of formal power series. The combinatorics of the ordinary and exponential generating series. Lagrange's implicit function theorem, applications to the enumeration of permutations, functions, trees and graphs. Integer partitions, geometric methods, enumerating linear transformations. Introduction to the pattern algebra, applications to the enumeration of strings. Lattice paths, Wiener-Hopf factorization. Enumeration under symmetries. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "239" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "249" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "331"
    , courseId = "003892"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Coding Theory"
    , courseDescription = "A first course in error-correcting codes. Linear block codes, Hamming-Golay codes, and multiple error-correcting BCH codes are studied. Various encoding and decoding schemes are considered. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "225" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "235" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "245" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "342"
    , courseId = "003893"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Graph Theory"
    , courseDescription = "An introduction to some of the key topics in graph theory: connectivity, planarity, and matchings. Connectivity: Menger's theorem, 3-connected graphs. Planarity: Kuratowski's theorem, uniqueness of planar embeddings. Matchings: Review of Konig's theorem, Tutte's theorem. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "239" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "249" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "351"
    , courseId = "003896"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Network Flow Theory"
    , courseDescription = "Review of linear programming. Shortest path problems. The max-flow min-cut theorem and applications.  Minimum cost flow problems.  Network simplex and primal-dual algorithms.  Applications to problems of transportation, distribution, job assignments, and critical-path planning. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "CO" "250" ) Nothing
        , ReqCourse
            ( CourseName "CO" "255" ) Nothing
        , ReqCourse
            ( CourseName "CO" "352" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "353"
    , courseId = "011442"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Discrete Optimization"
    , courseDescription = "Formulations of combinatorial optimization problems, greedy algorithms, dynamic programming, branch-and-bound, cutting plane algorithms, decomposition techniques in integer programming, approximation algorithms."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "CO" "250" ) Nothing
        , ReqCourse
            ( CourseName "CO" "255" ) Nothing
        , ReqCourse
            ( CourseName "CO" "352" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "367"
    , courseId = "003898"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Nonlinear Optimization"
    , courseDescription = "A course on the fundamentals of nonlinear optimization, including both the mathematical and the computational aspects.  Necessary and sufficient optimality conditions for unconstrained and  constrained problems. Convexity and its applications. Computational  techniques and their analysis. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "CO" "250" ) Nothing
        , ReqCourse
            ( CourseName "CO" "255" ) Nothing
        , ReqCourse
            ( CourseName "CO" "352" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "128" )
            ( Just 70.0 )
        , ReqCourse
            ( CourseName "MATH" "138" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "148" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "370"
    , courseId = "003899"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Deterministic OR Models"
    , courseDescription = "An applications-oriented course that illustrates how various mathematical models and methods of optimization can be used to solve problems arising in business, industry, and science. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "352" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "CO" "327" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "372"
    , courseId = "011736"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Portfolio Optimization Models"
    , courseDescription = "Computational optimization methodologies underlying portfolio problems in finance. Computational linear algebra, determining derivatives, quadratic, and nonlinear optimization. The efficient frontier problem. Applications of optimization in finance such as volatility surface determination and global minimization for value-at-risk. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "AFM" "272" ) Nothing
            , ReqCourse
                ( CourseName "ACTSC" "291" ) Nothing
            , ReqCourse
                ( CourseName "ACTSC" "371" ) Nothing
            , ReqCourse
                ( CourseName "ACTSC" "372" ) Nothing
            , ReqCourse
                ( CourseName "BUS" "393W" ) Nothing
            , ReqCourse
                ( CourseName "ECON" "371" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CO" "227" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "352" ) Nothing
            ]
        , ReqNot
            ( ReqNote "CO 370 taken prior to winter 2004" )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "380"
    , courseId = "003901"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Mathematical Discovery and Invention"
    , courseDescription = "A course in problem solving. 100 problems are studied. Problems are taken mainly from the elementary parts of algebra, geometry, number theory, combinatorics, and probability."
    , courseNote = "[Note: Offered in the spring term of even years.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "135" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "430"
    , courseId = "003902"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Algebraic Enumeration"
    , courseDescription = "The Lagrange Implicit Function Theorem, the MacMahon Master Theorem. Enumeration of planar triangulations. The transfer matrix method. Sieve methods, inclusion/exclusion, Mobius inversion. Polya enumeration, Enumeration of trees. Basic hypergeometric series, q-analogues, Rogers-Ramanujan identities. Asymptotic methods."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CO" "330" ) Nothing
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "431"
    , courseId = "016410"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Symmetric Functions"
    , courseDescription = "The ring of symmetric functions, standard bases, the Hall inner product. Young tableaux. The Robinson-Schensted-Knuth correspondence, the hook-length formula, the Jacobi-Trudi formula, the Pieri rule, the Littlewood-Richardson rule. Representation theory of the symmetric groups. Enumeration of plane partitions. Enumeration of maps on surfaces. Other topics."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "PMATH" "336" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "347" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "432"
    , courseId = "016487"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Information Theory and Applications"
    , courseDescription = "Basics of information theory; Shannon entropy, KL divergence, and mutual information; basic properties of entropic quantities; chain rule, Pinsker's Inequality, Data Processing Inequality; compression; Channel Coding Theorem; error-correction; applications to combinatorics, optimization, cryptography, and computer science."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "434"
    , courseId = "003903"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Combinatorial Designs"
    , courseDescription = "Pairwise orthogonal latin squares. Transversal designs and finite planes. Balanced incomplete block designs, group divisible designs, and pairwise balanced designs. Symmetric designs and Hadamard matrices. Recursive constructions. Wilson's fundamental construction."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "PMATH" "336" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "346" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "347" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "439"
    , courseId = "003906"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Combinatorics"
    , courseDescription = "An undergraduate seminar in combinatorics. The primary objective is to study current work in specific areas of combinatorics. Course content may vary from term to term."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "440"
    , courseId = "003907"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Graph Theory"
    , courseDescription = "An in-depth study of one or two topics in graph theory. Course content may vary from term to term. Topics may include planar graphs, extremal graph theory, directed graphs, enumeration, algebraic graph theory, probabilistic graph theory, connectivity, graph embedding, colouring problems."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "CO" "342" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "442"
    , courseId = "003908"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Graph Theory"
    , courseDescription = "Connectivity (Menger's theorem, ear decomposition, and Tutte's wheels theorem) and matchings (Hall's theorem and Tutte's theorem). Flows: integer and group-valued flows, the flow polynomial, the 6-flow theorem. Ramsey theory: upper and lower bounds, explicit constructions. External graph theory: Turan's theorem, the Erdos-Gallai theorem. Probabilistic methods. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "342" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "444"
    , courseId = "003909"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Algebraic Graph Theory"
    , courseDescription = "An introduction to the methods of and some interesting current topics in algebraic graph theory.  Topics covered will include vertex-transitive graphs, eigenvalue methods, strongly regular graphs and may include graph homomorphisms, Laplacians or knot and link invariants."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "336" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "346" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "347" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "446"
    , courseId = "013337"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Matroid Theory"
    , courseDescription = "This is an introductory course on matroid theory, with particular emphasis on graphic matroids and on topics that are applicable to graph theory. The topics include matroid intersection and partition, graphic matroids, matroid connectivity, regular matroids, and representable matroids. Applications include matching, disjoint paths, disjoint spanning trees, the 8-flow theorem for graphs, planarity testing, and recognizing totally unimodular matrices. [Offered: S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CO" "342" ) Nothing
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "450"
    , courseId = "003910"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Combinatorial Optimization"
    , courseDescription = "Characterizations of optimal solutions and efficient algorithms for optimization problems over discrete structures. Topics include network flows, optimal matchings, T-joins and postman tours, matroid optimization. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "351" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "452"
    , courseId = "003911"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Integer Programming"
    , courseDescription = "Formulation of problems as integer linear programs. Solution by branch-and-bound and cutting plane algorithms. Introduction to the theory of valid inequalities and polyhedral combinatorics."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "351" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "454"
    , courseId = "003913"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Scheduling"
    , courseDescription = "An overview of practical optimization problems that can be posed as scheduling problems. Characterizations of optimal schedules. Simple and efficient combinatorial algorithms for easy problems. A brief overview of computational complexity, definition of P, NP, NP-complete and NP-hard. Integer programming formulations, the traveling salesman problem, heuristics, dynamic programming, and branch-and-bound approaches. Polynomial-time approximation algorithms. [Offered: S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "229" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "239" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "249" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CO" "227" ) Nothing
            , ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "352" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "456"
    , courseId = "003914"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Game Theory"
    , courseDescription = "A broad introduction to game theory and its applications to the modeling of competition and cooperation in business, economics, and society. Two-person games in strategic form and Nash equilibria. Extensive form games, including multi-stage games. Coalition games and the core. Bayesian games, mechanism design, and auctions."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "229" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "239" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "249" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CO" "227" ) Nothing
            , ReqCourse
                ( CourseName "CO" "250" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "352" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "459"
    , courseId = "010046"
    , courseComponents = [ "SEM" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Optimization"
    , courseDescription = "An undergraduate seminar in optimization. The primary objective is to study recent work in specific areas of optimization. Course content may vary from term to term."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "463"
    , courseId = "010047"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Convex Optimization and Analysis"
    , courseDescription = "An introduction to the modern theory of convex programming, its extensions and applications. Structure of convex sets, separation and support, subgradient calculus for convex functions, Fenchel conjugacy and duality, Lagrange multipliers. Ellipsoid method for convex optimization. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "367" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "AMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "351" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "466"
    , courseId = "003917"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Continuous Optimization"
    , courseDescription = "Numerical algorithms for nonlinear optimization. Newton, variable-metric, quasi-Newton and conjugate gradient methods. Obtaining derivatives. Convexity. Trust region methods. Constrained optimization including optimality conditions, sequential quadratic programming, interior point, and active set strategies."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqCourse
                    ( CourseName "CO" "367" ) Nothing
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CO" "250" ) Nothing
                    , ReqCourse
                        ( CourseName "CO" "352" ) Nothing
                    ]
                ]
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "471"
    , courseId = "011364"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Semidefinite Optimization"
    , courseDescription = "Optimization over convex sets described as the intersection of the set of symmetric, positive semidefinite matrices with affine spaces. Formulations of problems from combinatorial optimization, graph theory, number theory, probability and statistics, engineering design, and control theory. Theoretical and practical consequences of these formulations. Duality theory and algorithms. [Offered: S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            , ReqCourse
                ( CourseName "AMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "351" ) Nothing
            , ReqCourse
                ( CourseName "CO" "255" ) Nothing
            , ReqCourse
                ( CourseName "CO" "367" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "480"
    , courseId = "003918"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "History of Mathematics"
    , courseDescription = "An in-depth examination of the origins of mathematics, beginning with examples of Babylonian mathematics. Topics may include Pythagorean triples, solution of equations, estimation of pi, duplication of the cube, trisection of an angle, the Fibonacci sequence, the origins of calculus."
    , courseNote = "[Note: Offered in the spring term of  odd years.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "ECE" "108" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "135" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "481"
    , courseId = "011497"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Quantum Information Processing"
    , courseDescription = "Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" )
                ( Just 80.0 )
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist =
        [ CourseName "CS" "467"
        , CourseName "PHYS" "467"
        ]
    }
, Course
    { courseName = CourseName "CO" "485"
    , courseId = "010137"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "The Mathematics of Public-Key Cryptography"
    , courseDescription = "An in-depth study of public-key cryptography. Number-theoretic problems: prime generation, integer factorization, discrete logarithms. Public-key encryption, digital signatures, key establishment, elliptic curve cryptography, post-quantum cryptography. Proofs of security. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "PMATH" "334" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "336" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "345" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "346" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "347" ) Nothing
            ]
        , ReqNote "Cumulative overall average of at least 80%"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "486"
    , courseId = "016488"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Quantum Information"
    , courseDescription = "The primary objective is to study current work in specific areas of quantum information. Course content may vary from term to term."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "487"
    , courseId = "010136"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Applied Cryptography"
    , courseDescription = "A broad introduction to modern cryptography, highlighting the tools and techniques used to secure internet and messaging applications. Symmetric-key encryption, hash functions, message authentication, authenticated encryption, public-key encryption and digital signatures, key establishment, key management. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "135" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "220" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CO" "499"
    , courseId = "003920"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Reading in Combinatorics and Optimization"
    , courseDescription = "Reading course as announced by the department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "100"
    , courseId = "004360"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computing Through Applications"
    , courseDescription = "Using personal computers as effective problem solving tools for the present and the future. Effective use of spreadsheets to process, manipulate, and visualize numeric and textual information. Introduction to the Internet, World Wide Web, HTML, and XML. Algorithms underlying the functional components of web search engines and their influence on data access. Using wikis to publish, reshape, and organize data collaboratively. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Not open to Mathematics,Biomedical,Chemical,Civil,Computer & Electrical,Environmental,Geological,Management,Mechanical,Mechatronics,Nanotechnology & Systems Design Eng students"
        , ReqNot
            ( ReqNote "All second,third or fourth year CS courses or equivalents" )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "105"
    , courseId = "015054"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computer Programming 1"
    , courseDescription = "An introduction to the fundamentals of computer programming through media computation. Students will learn to write interactive graphical programs. Fundamental language concepts such as variables, conditionals, loops, functions, and arrays. Programming concepts such as coding style, modular design, testing, and debugging. Media concepts such as 2D graphics drawing, input, animation, and image processing."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "121" )
                , ReqCoCourse
                    ( CourseName "CS" "115" )
                , ReqCoCourse
                    ( CourseName "CS" "135" )
                , ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "145" )
                , ReqCoCourse
                    ( CourseName "CHE" "121" )
                , ReqCoCourse
                    ( CourseName "CIVE" "121" )
                , ReqCoCourse
                    ( CourseName "ECE" "150" )
                , ReqCoCourse
                    ( CourseName "MTE" "121" )
                , ReqCoCourse
                    ( CourseName "GENE" "121" )
                , ReqCoCourse
                    ( CourseName "NE" "111" )
                , ReqCoCourse
                    ( CourseName "MSCI" "121" )
                , ReqCoCourse
                    ( CourseName "PHYS" "236" )
                , ReqCoCourse
                    ( CourseName "SYDE" "121" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "106"
    , courseId = "015055"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computer Programming 2"
    , courseDescription = "A continuation of the introduction to computer programming begun in CS 105. The use of programming, in conjunction with libraries, as a means of solving practical problems in art, design, and data processing. Basic text processing, manipulation of images and sound, handling and visualization of tabular and hierarchical data. Introductions to user interfaces, physical simulation, and object-oriented programming."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "105" ) Nothing
        , ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "121" )
                , ReqCoCourse
                    ( CourseName "CS" "115" )
                , ReqCoCourse
                    ( CourseName "CS" "135" )
                , ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "145" )
                , ReqCoCourse
                    ( CourseName "CHE" "121" )
                , ReqCoCourse
                    ( CourseName "CIVE" "121" )
                , ReqCoCourse
                    ( CourseName "ECE" "150" )
                , ReqCoCourse
                    ( CourseName "MTE" "121" )
                , ReqCoCourse
                    ( CourseName "GENE" "121" )
                , ReqCoCourse
                    ( CourseName "NE" "111" )
                , ReqCoCourse
                    ( CourseName "MSCI" "121" )
                , ReqCoCourse
                    ( CourseName "SYDE" "121" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "114"
    , courseId = "016252"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Principles of Computing for Science"
    , courseDescription = "Introduction to basic imperative programming principles; programming concepts including functions, flow control, lists, arrays; numerical accuracy and efficiency; data analysis and general-purpose algorithms. Introduction to object-oriented programming concepts."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Not open to Faculty of Math students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "116" )
                , ReqCoCourse
                    ( CourseName "CS" "135" )
                , ReqCoCourse
                    ( CourseName "CS" "136" )
                , ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "138" )
                , ReqCoCourse
                    ( CourseName "CS" "145" )
                , ReqCoCourse
                    ( CourseName "CS" "146" )
                , ReqCoCourse
                    ( CourseName "BME" "121" )
                , ReqCoCourse
                    ( CourseName "CHE" "120" )
                , ReqCoCourse
                    ( CourseName "CIVE" "121" )
                , ReqCoCourse
                    ( CourseName "ECE" "150" )
                , ReqCoCourse
                    ( CourseName "GENE" "121" )
                , ReqCoCourse
                    ( CourseName "MTE" "121" )
                , ReqCoCourse
                    ( CourseName "ME" "101" )
                , ReqCoCourse
                    ( CourseName "MSCI" "121" )
                , ReqCoCourse
                    ( CourseName "NE" "111" )
                , ReqCoCourse
                    ( CourseName "PHYS" "236" )
                , ReqCoCourse
                    ( CourseName "SYDE" "121" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "115"
    , courseId = "012765"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computer Science 1"
    , courseDescription = "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Function definition and application. Tracing via substitution. Design, testing, and documentation. Recursive data definitions. Lists and trees. Functional and data abstraction."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqNot
        ( ReqOr
            [ ReqCoCourse
                ( CourseName "BME" "121" )
            , ReqCoCourse
                ( CourseName "CS" "135" )
            , ReqCoCourse
                ( CourseName "CS" "137" )
            , ReqCoCourse
                ( CourseName "CS" "138" )
            , ReqCoCourse
                ( CourseName "CS" "145" )
            , ReqCoCourse
                ( CourseName "CHE" "121" )
            , ReqCoCourse
                ( CourseName "CIVE" "121" )
            , ReqCoCourse
                ( CourseName "ECE" "150" )
            , ReqCoCourse
                ( CourseName "GENE" "121" )
            , ReqCoCourse
                ( CourseName "MTE" "121" )
            , ReqCoCourse
                ( CourseName "ME" "101" )
            , ReqCoCourse
                ( CourseName "NE" "111" )
            , ReqCoCourse
                ( CourseName "MSCI" "121" )
            , ReqCoCourse
                ( CourseName "PHYS" "139" )
            , ReqCoCourse
                ( CourseName "SYDE" "121" )
            ]
        )
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "116"
    , courseId = "012766"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computer Science 2"
    , courseDescription = "This course builds on the techniques and patterns learned in CS 115 while making the transition to use of an imperative language. Generative and structural recursion. Mutation (assignment) and its role in an imperative language. Primitive types and basic I/O. Sequencing, selection, looping. Function definition and use. File and console I/O. Issues in computer science."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "115" ) Nothing
            , ReqCourse
                ( CourseName "CS" "135" ) Nothing
            , ReqCourse
                ( CourseName "CS" "145" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "114" )
                , ReqCoCourse
                    ( CourseName "CS" "136" )
                , ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "138" )
                , ReqCoCourse
                    ( CourseName "CS" "146" )
                , ReqCoCourse
                    ( CourseName "PHYS" "236" )
                , ReqCoCourse
                    ( CourseName "PHYS" "239" )
                , ReqCoCourse
                    ( CourseName "MSCI" "240" )
                , ReqCoCourse
                    ( CourseName "NE" "111" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "135"
    , courseId = "012040"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Designing Functional Programs"
    , courseDescription = "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Syntax and semantics of a functional programming language. Tracing via substitution. Design, testing, and documentation. Linear and nonlinear data structures. Recursive data definitions. Abstraction and encapsulation. Generative and structural recursion. Historical context."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqNot
        ( ReqOr
            [ ReqCoCourse
                ( CourseName "AE" "121" )
            , ReqCoCourse
                ( CourseName "BME" "121" )
            , ReqCoCourse
                ( CourseName "CS" "115" )
            , ReqCoCourse
                ( CourseName "CS" "137" )
            , ReqCoCourse
                ( CourseName "CS" "138" )
            , ReqCoCourse
                ( CourseName "CS" "145" )
            , ReqCoCourse
                ( CourseName "CIVE" "121" )
            , ReqCoCourse
                ( CourseName "ECE" "150" )
            , ReqCoCourse
                ( CourseName "ME" "101" )
            , ReqCoCourse
                ( CourseName "MSCI" "121" )
            , ReqCoCourse
                ( CourseName "PHYS" "236" )
            , ReqCoCourse
                ( CourseName "SYDE" "121" )
            ]
        )
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "136"
    , courseId = "012041"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Elementary Algorithm Design and Data Abstraction"
    , courseDescription = "This course builds on the techniques and patterns learned in CS 135 while making the transition to use an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations. Offered: F,W,S"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "115" )
                ( Just 90.0 )
            , ReqCourse
                ( CourseName "CS" "116" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "CS" "135" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "CS" "145" ) Nothing
            ]
        , ReqCoCourse
            ( CourseName "CS" "136L" )
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "138" )
                , ReqCoCourse
                    ( CourseName "CS" "146" )
                , ReqCoCourse
                    ( CourseName "PHYS" "239" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "136L"
    , courseId = "016330"
    , courseComponents = [ "LAB" ]
    , courseUnits = 0.25
    , courseTitle = "Tools and Techniques for Software Development"
    , courseDescription = "This course introduces students to tools and techniques useful in the software development lifecycle. Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell. Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs. Tracing and debugging strategies are discussed. Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs)."
    , courseNote = "[Note: Course will be graded on a CR/NCR basis.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "115" )
                ( Just 90.0 )
            , ReqCourse
                ( CourseName "CS" "116" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "CS" "135" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "CS" "145" ) Nothing
            ]
        , ReqOr
            [ ReqCoCourse
                ( CourseName "CS" "136" )
            , ReqCoCourse
                ( CourseName "CS" "146" )
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "137"
    , courseId = "012886"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Programming Principles"
    , courseDescription = "Review of fundamental programming concepts and their application. Procedures and parameter passing. Arrays and structures. Recursion.  Sorting. Pointers and simple dynamic structures.  Space and time analysis of designs. Design methodologies. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqNote "Software Engineering students only"
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "138"
    , courseId = "012887"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Data Abstraction and Implementation"
    , courseDescription = "Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W]"
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "CS" "137" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "145"
    , courseId = "012767"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Designing Functional Programs (Advanced Level)"
    , courseDescription = "CS 145 is an advanced-level version of CS 135."
    , courseNote = "[Note: This course may be substituted for CS 135 in any degree plan or for prerequisite purposes. Offered: F]"
    , courseOffered = []
    , courseReq = ReqNot
        ( ReqOr
            [ ReqCoCourse
                ( CourseName "CS" "115" )
            , ReqCoCourse
                ( CourseName "CS" "135" )
            , ReqCoCourse
                ( CourseName "CS" "137" )
            , ReqCoCourse
                ( CourseName "CS" "138" )
            ]
        )
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "146"
    , courseId = "013657"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Elementary Algorithm Design and Data Abstraction (Advanced Level)"
    , courseDescription = "CS 146 is an advanced-level version of CS 136."
    , courseNote = "[Note: This course may be substituted for CS 136 in any degree plan or for prerequisite purposes. Students who receive a good grade in CS 135 may contact the instructor of CS 146 to seek admission without the formal prerequisites. Offered: W]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "145" )
            ( Just 75.0 )
        , ReqCoCourse
            ( CourseName "CS" "136L" )
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "116" )
                , ReqCoCourse
                    ( CourseName "CS" "136" )
                , ReqCoCourse
                    ( CourseName "CS" "137" )
                , ReqCoCourse
                    ( CourseName "CS" "138" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "200"
    , courseId = "004372"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Concepts for Advanced Computer Usage"
    , courseDescription = "Important concepts underlying major personal computer application categories; methodologies for learning and evaluating software; operating system and hardware design from the user's point of view, with implications for maintaining a personal computer. Students are encouraged to use their own personal computer for assignments.  Social media and the effect of technology on society are explored throughout the course. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqNote "Not open to Computer Science students"
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "230"
    , courseId = "004374"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computers and Computer Systems"
    , courseDescription = "Basic computer architecture, organization, system services, and software. Typology of  processors, memory, I/O devices, and their performance."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "114" )
                    ( Just 60.0 )
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "115" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "135" ) Nothing
                    ]
                ]
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "292" )
                , ReqCoCourse
                    ( CourseName "BME" "393" )
                , ReqCoCourse
                    ( CourseName "CS" "241" )
                , ReqCoCourse
                    ( CourseName "CS" "241E" )
                , ReqCoCourse
                    ( CourseName "CS" "251" )
                , ReqCoCourse
                    ( CourseName "CS" "251E" )
                , ReqCoCourse
                    ( CourseName "SYDE" "192" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "231"
    , courseId = "015400"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Algorithmic Problem Solving"
    , courseDescription = "The study of the steps required to solve real-world problems on a computer, including problem specification, choice of algorithmic paradigm, analysis, and implementation. Topics include exhaustive search, divide and conquer, greedy, and dynamic programming approaches."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqCourse
                ( CourseName "CS" "114" )
                ( Just 60.0 )
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "115" ) Nothing
            , ReqCourse
                ( CourseName "CS" "135" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "122" )
                , ReqCoCourse
                    ( CourseName "CS" "341" )
                , ReqCoCourse
                    ( CourseName "ECE" "250" )
                , ReqCoCourse
                    ( CourseName "MSCI" "240" )
                , ReqCoCourse
                    ( CourseName "MTE" "140" )
                , ReqCoCourse
                    ( CourseName "SYDE" "223" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "234"
    , courseId = "004375"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data Types and Structures"
    , courseDescription = "Top-down design of data structures. Using representation-independent data types. Introduction to commonly used data types, including lists, sets, mappings, and trees. Selection of data representation."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqCourse
                ( CourseName "CS" "114" )
                ( Just 60.0 )
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "115" ) Nothing
            , ReqCourse
                ( CourseName "CS" "135" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "122" )
                , ReqCoCourse
                    ( CourseName "CS" "240" )
                , ReqCoCourse
                    ( CourseName "CS" "240E" )
                , ReqCoCourse
                    ( CourseName "ECE" "250" )
                , ReqCoCourse
                    ( CourseName "MSCI" "240" )
                , ReqCoCourse
                    ( CourseName "MTE" "140" )
                , ReqCoCourse
                    ( CourseName "SYDE" "223" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "240"
    , courseId = "004377"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data Structures and Data Management"
    , courseDescription = "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "245" ) Nothing
            , ReqCourse
                ( CourseName "CS" "245E" ) Nothing
            , ReqCourse
                ( CourseName "SE" "212" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "247" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "122" )
                , ReqCoCourse
                    ( CourseName "CS" "234" )
                , ReqCoCourse
                    ( CourseName "CS" "240E" )
                , ReqCoCourse
                    ( CourseName "ECE" "250" )
                , ReqCoCourse
                    ( CourseName "MTE" "140" )
                , ReqCoCourse
                    ( CourseName "SYDE" "223" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "240E"
    , courseId = "015405"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data Structures and Data Management (Enriched)"
    , courseDescription = "Enriched version of CS 240."
    , courseNote = "[Note: CS 240E may be substituted for CS 240 wherever the latter is a requirement. Enrolment is restricted. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: As permitted by demand and available resources.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" )
                ( Just 85.0 )
            , ReqCourse
                ( CourseName "CS" "138" )
                ( Just 85.0 )
            , ReqCourse
                ( CourseName "CS" "146" )
                ( Just 85.0 )
            ]
        , ReqNote "Computer Science and BMATH (Data Science) Students only"
        , ReqOr
            [ ReqCoCourse
                ( CourseName "STAT" "206" )
            , ReqCoCourse
                ( CourseName "STAT" "230" )
            , ReqCoCourse
                ( CourseName "STAT" "240" )
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "234" )
                , ReqCoCourse
                    ( CourseName "CS" "240" )
                , ReqCoCourse
                    ( CourseName "ECE" "250" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "241"
    , courseId = "004378"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Foundations of Sequential Programs"
    , courseDescription = "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages."
    , courseNote = "[Note: Enrolment is restricted. Lab is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqAnd
                [ ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "246" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "246E" ) Nothing
                    ]
                , ReqCourse
                    ( CourseName "CS" "136L" ) Nothing
                ]
            , ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "136L" ) Nothing
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "136" )
                        ( Just 85.0 )
                    , ReqCourse
                        ( CourseName "CS" "146" )
                        ( Just 85.0 )
                    ]
                ]
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "230" )
                , ReqCoCourse
                    ( CourseName "CS" "241E" )
                , ReqCoCourse
                    ( CourseName "ECE" "351" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "241E"
    , courseId = "015406"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Foundations of Sequential Programs (Enriched)"
    , courseDescription = "Enriched version of CS 241."
    , courseNote = "[Note: CS 241E may be substituted for CS 241 wherever the latter is a requirement. Enrolment is restricted. Lab is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. Offered: As permitted by demand and available resources.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "136L" ) Nothing
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "136" )
                        ( Just 85.0 )
                    , ReqCourse
                        ( CourseName "CS" "146" )
                        ( Just 85.0 )
                    ]
                ]
            , ReqCourse
                ( CourseName "CS" "138" )
                ( Just 85.0 )
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "230" )
                , ReqCoCourse
                    ( CourseName "ECE" "351" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "245"
    , courseId = "011405"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Logic and Computation"
    , courseDescription = "Logic as a tool for representation, reasoning, and computation. Propositional and predicate logic. Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation. Godel's Incompleteness Theorem. Applications of logic to computer science."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            ]
        , ReqCourse
            ( CourseName "MATH" "135" ) Nothing
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "245E" )
                , ReqCoCourse
                    ( CourseName "PMATH" "330" )
                , ReqCoCourse
                    ( CourseName "ECE" "208" )
                , ReqCoCourse
                    ( CourseName "SE" "212" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "245E"
    , courseId = "015407"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Logic and Computation (Enriched)"
    , courseDescription = "Enriched version of CS 245."
    , courseNote = "[Note: CS 245E may be substituted for CS 245 wherever the latter is a requirement. Enrolment is restricted. Offered: As permitted by demand and available resources.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" )
                ( Just 85.0 )
            , ReqCourse
                ( CourseName "CS" "146" )
                ( Just 85.0 )
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqAnd
                [ ReqCoCourse
                    ( CourseName "CS" "245" )
                , ReqCoCourse
                    ( CourseName "ECE" "208" )
                , ReqCoCourse
                    ( CourseName "PMATH" "330" )
                , ReqCoCourse
                    ( CourseName "SE" "212" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "246"
    , courseId = "004380"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Object-Oriented Software Development"
    , courseDescription = "Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "146" ) Nothing
                , ReqCourse
                    ( CourseName "CS" "136L" ) Nothing
                ]
            , ReqCourse
                ( CourseName "CS" "138" )
                ( Just 60.0 )
            , ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "136L" ) Nothing
                , ReqCourse
                    ( CourseName "CS" "136" )
                    ( Just 60.0 )
                ]
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "246E" )
                , ReqCoCourse
                    ( CourseName "CS" "247" )
                , ReqCoCourse
                    ( CourseName "MSCI" "342" )
                , ReqCoCourse
                    ( CourseName "SYDE" "322" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "246E"
    , courseId = "015408"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Object-Oriented Software Development (Enriched)"
    , courseDescription = "Enriched version of CS 246."
    , courseNote = "[Note: CS 246E may be substituted for CS 246 wherever the latter is a requirement. Enrolment is restricted. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: As permitted by demand and available resources.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "136L" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" )
                ( Just 85.0 )
            , ReqCourse
                ( CourseName "CS" "146" )
                ( Just 85.0 )
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "246" )
                , ReqCoCourse
                    ( CourseName "SYDE" "322" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "247"
    , courseId = "013805"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Software Engineering Principles"
    , courseDescription = "Systematic methods for designing, coding, testing, and documenting medium-sized programs. Major topics include abstraction, modularity, software modeling, object-oriented programming and design, generic programming, testing and debugging."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqNote "Software Engineering students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "246" )
                , ReqCoCourse
                    ( CourseName "CS" "246E" )
                , ReqCoCourse
                    ( CourseName "MSCI" "342" )
                , ReqCoCourse
                    ( CourseName "SYDE" "322" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "251"
    , courseId = "004382"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Organization and Design"
    , courseDescription = "Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors."
    , courseNote = "[Note: Students enrolled in Digital Hardware Specialization should enrol in ECE 222. Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "251E" )
                , ReqCoCourse
                    ( CourseName "BME" "292" )
                , ReqCoCourse
                    ( CourseName "BME" "393" )
                , ReqCoCourse
                    ( CourseName "ECE" "222" )
                , ReqCoCourse
                    ( CourseName "ME" "262" )
                , ReqCoCourse
                    ( CourseName "MTE" "262" )
                , ReqCoCourse
                    ( CourseName "SYDE" "192" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "251E"
    , courseId = "015893"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Organization and Design (Enriched)"
    , courseDescription = "Enriched version of CS 251."
    , courseNote = "[Note: Students enrolled in Digital Hardware Specialization should enrol in ECE 222. See note 1. CS 251E may be substituted for CS 251 wherever the latter is a requirement. Enrolment is restricted. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: As permitted by demand and available resources.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "136" )
                ( Just 85.0 )
            , ReqCourse
                ( CourseName "CS" "146" )
                ( Just 85.0 )
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BME" "292" )
                , ReqCoCourse
                    ( CourseName "BME" "393" )
                , ReqCoCourse
                    ( CourseName "CS" "251" )
                , ReqCoCourse
                    ( CourseName "ECE" "222" )
                , ReqCoCourse
                    ( CourseName "ME" "262" )
                , ReqCoCourse
                    ( CourseName "MTE" "262" )
                , ReqCoCourse
                    ( CourseName "SYDE" "192" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "330"
    , courseId = "004385"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Management Information Systems"
    , courseDescription = "An introduction to information systems and their strategic role in business. Topics include types of information systems, organizational requirements, systems development strategies, decision support systems, data and information management, and information systems management, control, and implementation."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "106" ) Nothing
            , ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "114" )
                    ( Just 60.0 )
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "115" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "135" ) Nothing
                    ]
                ]
            ]
        , ReqNote "Level at least 2B"
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AFM" "241" )
                , ReqCoCourse
                    ( CourseName "BUS" "415W" )
                , ReqCoCourse
                    ( CourseName "BUS" "486W" )
                , ReqCoCourse
                    ( CourseName "CS" "480" )
                , ReqCoCourse
                    ( CourseName "CS" "490" )
                , ReqCoCourse
                    ( CourseName "MSCI" "441" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "335"
    , courseId = "013658"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Methods in Business and Finance"
    , courseDescription = "An introduction to numerical methods for business and finance. Floating-point arithmetic, interpolation. Methods for portfolio optimization and contingent-claims valuation. Solution of nonlinear equations. Monte Carlo methods, lattice methods, simulation of hedging strategies."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqAnd
                [ ReqCourse
                    ( CourseName "CS" "114" )
                    ( Just 60.0 )
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "115" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "135" ) Nothing
                    ]
                ]
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "242" )
                , ReqCoCourse
                    ( CourseName "CS" "371" )
                , ReqCoCourse
                    ( CourseName "CS" "370" )
                , ReqCoCourse
                    ( CourseName "MTE" "204" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "338"
    , courseId = "004390"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Applications in Business: Databases"
    , courseDescription = "A user-oriented approach to the management of large collections of data. Methods used for the storage, selection, and presentation of data. Common database management systems."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "230" ) Nothing
            , ReqCourse
                ( CourseName "CS" "231" ) Nothing
            , ReqCourse
                ( CourseName "CS" "234" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "330" ) Nothing
            , ReqAnd
                [ ReqCourse
                    ( CourseName "AFM" "341" ) Nothing
                , ReqOr
                    [ ReqCourse
                        ( CourseName "CS" "116" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "136" ) Nothing
                    , ReqCourse
                        ( CourseName "CS" "146" ) Nothing
                    ]
                ]
            , ReqNote "Not open to Computer Science students"
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "348" )
                , ReqCoCourse
                    ( CourseName "CS" "448" )
                , ReqCoCourse
                    ( CourseName "MSCI" "346" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "341"
    , courseId = "004392"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Algorithms"
    , courseDescription = "The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "231" )
                , ReqCoCourse
                    ( CourseName "ECE" "406" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "343"
    , courseId = "011417"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Concurrent and Parallel Programming"
    , courseDescription = "An introduction to concurrent and parallel programming, with an emphasis on language constructs. Major topics include exceptions, coroutines, atomic operations, critical sections, mutual exclusion, semaphores, high-level concurrency, deadlock, interprocess communication, process structuring, shared memor,y and distributed architectures. Students will learn how to structure, implement, and debug concurrent programs."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "346"
    , courseId = "016287"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Application Development"
    , courseDescription = "Introduction to full-stack application design and development. Students will work in project teams to design and build complete, working applications and services using standard tools. Topics include best-practices in design, development, testing, and deployment."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "348"
    , courseId = "004417"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Database Management"
    , courseDescription = "The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database administration, and current topics (distributed databases, data warehouses, data mining)."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqOr
            [ ReqCoCourse
                ( CourseName "CS" "240" )
            , ReqCoCourse
                ( CourseName "CS" "240E" )
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "338" )
                , ReqCoCourse
                    ( CourseName "ECE" "356" )
                , ReqCoCourse
                    ( CourseName "ECE" "456" )
                , ReqCoCourse
                    ( CourseName "MSCI" "346" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "349"
    , courseId = "011727"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "User Interfaces"
    , courseDescription = "An introduction to contemporary user interface implementation concepts, including event abstraction, graphical components, layout, feedback, testing, accessibility, and architectures to develop user interfaces. One or more types of interface toolkit paradigms are considered."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "350"
    , courseId = "011416"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Operating Systems"
    , courseDescription = "An introduction to the fundamentals of operating system function, design, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "251" ) Nothing
            , ReqCourse
                ( CourseName "CS" "251E" ) Nothing
            , ReqCourse
                ( CourseName "ECE" "222" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "ECE" "254" )
                , ReqCoCourse
                    ( CourseName "ECE" "350" )
                , ReqCoCourse
                    ( CourseName "MTE" "241" )
                , ReqCoCourse
                    ( CourseName "SE" "350" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "360"
    , courseId = "004398"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to the Theory of Computing"
    , courseDescription = "Models of computers including finite automata and Turing machines. Basics of formal languages with applications to the syntax of programming languages. Alternate characterizations of language classes. Proving unrecognizability.  Unsolvable problems and their relevance to the semantics of programming."
    , courseNote = "[Note: Enrolment is restricted; see Note 1 above.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "CS" "365" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "365"
    , courseId = "011347"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Models of Computation"
    , courseDescription = "Finite automata and regular expressions. Pushdown automata and context-free grammars. Turing machines and undecidability. Time and space complexity. Diagonalization and hierarchies. CS 365 covers the material in CS 360 at an accelerated pace plus additional topics in computational complexity."
    , courseNote = "[Note: CS 365 may be substituted for CS 360 in any degree plan or for prerequisite purposes; enrolment is restricted; see Note 1 above.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "239" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "249" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "CS" "360" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "370"
    , courseId = "004400"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Numerical Computation"
    , courseDescription = "Principles and practices of basic numerical computation as a key aspect of scientific computation. Visualization of results. Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability. Presented in the context of specific applications to image processing, analysis of data, scientific modeling."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "231" ) Nothing
            , ReqCourse
                ( CourseName "CS" "234" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "242" )
                , ReqCoCourse
                    ( CourseName "CS" "371" )
                , ReqCoCourse
                    ( CourseName "CHE" "121" )
                , ReqCoCourse
                    ( CourseName "CIVE" "121" )
                , ReqCoCourse
                    ( CourseName "CS" "335" )
                , ReqCoCourse
                    ( CourseName "ECE" "204" )
                , ReqCoCourse
                    ( CourseName "MTE" "204" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "371"
    , courseId = "011363"
    , courseComponents =
        [ "LAB"
        , "LEC"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computational Mathematics"
    , courseDescription = "A rigorous introduction to the field of computational mathematics. The focus is on the interplay between continuous  models and  their solution via discrete processes. Topics include pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms, and numerical integration. Applications are used as motivation."
    , courseNote = "[Note: This course may be substituted for CS 370 in any degree plan or for prerequisite purposes; lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "335" )
                , ReqCoCourse
                    ( CourseName "CS" "370" )
                , ReqCoCourse
                    ( CourseName "ECE" "204" )
                , ReqCoCourse
                    ( CourseName "MTE" "204" )
                ]
            )
        ]
    , courseCrosslist =
        [ CourseName "AMATH" "242" ]
    }
, Course
    { courseName = CourseName "CS" "383"
    , courseId = "015143"
    , courseComponents = [ "STU" ]
    , courseUnits = 0.5
    , courseTitle = "Computational Digital Art Studio"
    , courseDescription = "An upper-level studio course to create computational projects that function as art works and aesthetic experiences. Students will work in an interdisciplinary environment to combine computer science principles with fine art technical and conceptual skills."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "FINE" "228" ) Nothing
            , ReqCourse
                ( CourseName "FINE" "247" ) Nothing
            ]
        ]
    , courseCrosslist =
        [ CourseName "FINE" "383" ]
    }
, Course
    { courseName = CourseName "CS" "398"
    , courseId = "011409"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Computer Science"
    , courseDescription = "See the Course Offerings List for topics available."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "247" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "399"
    , courseId = "011410"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Computer Science"
    , courseDescription = "Reading course as announced by the School."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "247" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "430"
    , courseId = "004404"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applications Software Engineering"
    , courseDescription = "An investigation into the role and function of software engineering practice in the construction of computer based systems. Topics include: requirements and specification; documentation techniques; analysis and design; implementation; testing and maintenance; management issues."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "330" ) Nothing
        , ReqNote "Level at least 3A"
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "446" )
                , ReqCoCourse
                    ( CourseName "ECE" "452" )
                , ReqCoCourse
                    ( CourseName "SE" "464" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "431"
    , courseId = "015547"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data-Intensive Distributed Analytics"
    , courseDescription = "Introduces non-CS major students to infrastructure for data-intensive analytics, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computation across many machines. Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "231" ) Nothing
            , ReqCourse
                ( CourseName "CS" "234" ) Nothing
            , ReqCourse
                ( CourseName "CS" "341" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "251" ) Nothing
            , ReqCourse
                ( CourseName "CS" "251E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "330" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "CS" "451" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "436"
    , courseId = "004407"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Networks and Distributed Computer Systems"
    , courseDescription = "An introduction to networks, protocols, and distributed systems. Layered models, resource management, naming, addressing and routing, reliable communication, security, and higher-level services."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "230" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "251" ) Nothing
            , ReqCourse
                ( CourseName "CS" "251E" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "454" )
                , ReqCoCourse
                    ( CourseName "CS" "456" )
                , ReqCoCourse
                    ( CourseName "ECE" "428" )
                , ReqCoCourse
                    ( CourseName "ECE" "454" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "442"
    , courseId = "004410"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Principles of Programming Languages"
    , courseDescription = "An exposure to important concepts and issues in contemporary programming languages. Data types, abstraction, and polymorphism. Program structure. Lambda calculus and functional programming, logic programming, object-oriented programming. Semantics of programming languages. Critical comparison of language features and programming methodologies using examples drawn from a variety of programming languages including Lisp, Prolog, ML, Ada, Smalltalk, Icon, APL, and Lucid. Programming assignments involve the use of some of these languages."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "444"
    , courseId = "004412"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Compiler Construction"
    , courseDescription = "Phases of compilation. Lexical analysis and a review of parsing. Compiler-compilers and translator writing systems. LEX and YACC. Scope rules, block structure, and symbol tables. Runtime stack management. Parameter passage mechanisms. Stack storage organization and templates. Heap storage management. Intermediate code. Code generation. Macros."
    , courseNote = "[Note: This course involves project work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "445"
    , courseId = "004413"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Software Requirements Specification and Analysis"
    , courseDescription = "Introduces students to the requirements definition phase of software development. Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "350" ) Nothing
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "SE" "463" )
            )
        ]
    , courseCrosslist =
        [ CourseName "ECE" "451" ]
    }
, Course
    { courseName = CourseName "CS" "446"
    , courseId = "004414"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Software Design and Architectures"
    , courseDescription = "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "350" ) Nothing
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "430" )
                , ReqCoCourse
                    ( CourseName "SE" "464" )
                ]
            )
        ]
    , courseCrosslist =
        [ CourseName "ECE" "452" ]
    }
, Course
    { courseName = CourseName "CS" "447"
    , courseId = "004416"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Software Testing, Quality Assurance, and Maintenance"
    , courseDescription = "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work."
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "350" ) Nothing
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "SE" "465" )
            )
        ]
    , courseCrosslist =
        [ CourseName "ECE" "453" ]
    }
, Course
    { courseName = CourseName "CS" "448"
    , courseId = "012300"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Database Systems Implementation"
    , courseDescription = "The objective of this course is to introduce students to fundamentals of building a relational database management system. The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "348" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "449"
    , courseId = "013910"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Human-Computer Interaction"
    , courseDescription = "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "241" ) Nothing
            , ReqCourse
                ( CourseName "CS" "241E" ) Nothing
            ]
        , ReqNote "Level at least 3B"
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "SYDE" "348" )
                , ReqCoCourse
                    ( CourseName "SYDE" "548" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "450"
    , courseId = "004418"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Architecture"
    , courseDescription = "The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology, and operating system functionality. The course places an emphasis on design based on the measurement of performance and its dependency on parallelism, efficiency, latency, and resource utilization."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "245" ) Nothing
            , ReqCourse
                ( CourseName "CS" "245E" ) Nothing
            , ReqCourse
                ( CourseName "SE" "212" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "ECE" "320" )
                , ReqCoCourse
                    ( CourseName "ECE" "429" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "451"
    , courseId = "015315"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data-Intensive Distributed Computing"
    , courseDescription = "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines. Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqCourse
            ( CourseName "CS" "348" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "452"
    , courseId = "004419"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Real-time Programming"
    , courseDescription = "Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication."
    , courseNote = "[Note: This course involves project work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "454"
    , courseId = "004420"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Distributed Systems"
    , courseDescription = "An introduction to distributed systems, emphasizing the multiple levels of software in such systems. Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "ECE" "454" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "456"
    , courseId = "010167"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Networks"
    , courseDescription = "An introduction to network architectures and protocols, placing emphasis on protocols used in the Internet. Specific topics include application layer protocols, network programming, transport protocols, routing, multicast, data link layer issues, multimedia networking, network security, and network management."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "436" )
                , ReqCoCourse
                    ( CourseName "ECE" "358" )
                , ReqCoCourse
                    ( CourseName "ECE" "428" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "457"
    , courseId = "004422"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "System Performance Evaluation"
    , courseDescription = "Basic techniques of system performance evaluation. Specific topics include: performance modeling, discrete event simulation, verification and validation of simulation models, analysis of simulation output, analysis of single server queue and queueing networks, modeling of computer systems, networks, and other queueing or non-queueing systems."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "246" ) Nothing
            , ReqCourse
                ( CourseName "CS" "246E" ) Nothing
            , ReqCourse
                ( CourseName "CS" "247" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "458"
    , courseId = "012980"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computer Security and Privacy"
    , courseDescription = "Security and privacy issues in various aspects of computing. Specific topics include comparing security and privacy, program security, writing secure programs, controls against program threats, operating system security, formal security models, network security, Internet application security and privacy, privacy-enhancing technologies, database security and privacy, inference, data mining, security policies, physical security, economics of security, and legal and ethical issues."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "ECE" "458" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "462"
    , courseId = "004424"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Formal Languages and Parsing"
    , courseDescription = "Languages and their representations. Grammars --Chomsky hierarchy. Regular sets and sequential machines. Context-free grammars -- normal forms, basic properties. Pushdown automata and transducers. Operations on languages. Undecidable problems in language theory. Applications to the design of programming languages and compiler construction."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "360" ) Nothing
            , ReqCourse
                ( CourseName "CS" "365" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "466"
    , courseId = "004426"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Algorithm Design and Analysis"
    , courseDescription = "Algorithmic approaches and methods of assessment that reflect a broad spectrum of criteria, including randomized algorithms, amortized analysis, lower bounds, approximation algorithms, and on-line algorithms. Particular examples will be chosen from different areas of active research and application."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "467"
    , courseId = "011497"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Quantum Information Processing"
    , courseDescription = "Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" )
                ( Just 80.0 )
            ]
        , ReqNote "Level at least 3A"
        ]
    , courseCrosslist =
        [ CourseName "PHYS" "467"
        , CourseName "CO" "481"
        ]
    }
, Course
    { courseName = CourseName "CS" "475"
    , courseId = "011444"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Linear Algebra"
    , courseDescription = "Basic concepts and implementation of numerical linear algebra techniques and their use in solving application problems. Special methods for  solving linear systems having special features. Direct methods: symmetric, positive definite, band, general sparse structures, ordering methods. Iterative methods: Jacobi, Gauss-Seidel, SOR, conjugate gradient. Computing and using orthogonal factorizations of matrices. QR and SVD methods for solving least squares problems. Eigenvalue and singular value decompositions. Computation and uses of these decompositions in practice."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "AMATH" "242" ) Nothing
            , ReqCourse
                ( CourseName "CS" "371" ) Nothing
            , ReqCourse
                ( CourseName "CS" "370" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "372" )
                , ReqCoCourse
                    ( CourseName "CS" "472" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "476"
    , courseId = "003352"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Numeric Computation for Financial Modeling"
    , courseDescription = "The interaction of financial models, numerical methods, and computing environments. Basic computational aspects of option pricing and hedging. Numerical methods for stochastic differential equations, strong and weak convergence. Generating correlated random numbers. Time-stepping methods. Finite difference methods for the Black-Scholes equation. Discretization, stability, convergence. Methods for portfolio optimization, effect of data errors on portfolio weights."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Students who receive a good grade in CS 335 may contact the instructor of CS 476 to seek admission without the formal prerequisites.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "AMATH" "242" ) Nothing
            , ReqCourse
                ( CourseName "CS" "371" ) Nothing
            , ReqCourse
                ( CourseName "CS" "370" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "479"
    , courseId = "016167"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Neural Networks"
    , courseDescription = "An introduction to neural network methods, with some discussion of their relevance to neuroscience. Simple neuron models and networks of neurons. Training feedforward networks for classification or regression. Learning using the backpropagation of errors. Unsupervised learning methods. Optimal linear decoding. Recurrent neural networks. Convolutional neural networks. Advanced topics, including adversarial inputs and biologically plausible learning methods."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "335" ) Nothing
            , ReqCourse
                ( CourseName "CS" "370" ) Nothing
            , ReqCourse
                ( CourseName "CS" "371" ) Nothing
            , ReqCourse
                ( CourseName "AMATH" "242" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "480"
    , courseId = "015515"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Machine Learning"
    , courseDescription = "Introduction to modeling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "482"
    , courseId = "004434"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Techniques in Biological Sequence Analysis"
    , courseDescription = "Computer science principles and algorithms in biological sequence analysis.  Topics include algorithms for sequence comparison, for large-scale database search in biological databases, for sequence assembly, for evolutionary tree reconstruction, for identifying important features in DNA and RNA sequences, and underlying computational techniques for understanding strings and trees and for making probabilistic inferences."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "484"
    , courseId = "013912"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Vision"
    , courseDescription = "Introduction to image and vision understanding by computer. Camera-system geometry, image formation and lighting, and image acquisition. Basic visual processes for recognition of edges, regions, lines, and surfaces. Processing of stereo images, and motion in image sequences. Object recognition. Applications of computer-vision systems."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "AMATH" "242" ) Nothing
            , ReqCourse
                ( CourseName "CS" "371" ) Nothing
            , ReqCourse
                ( CourseName "CS" "370" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "485"
    , courseId = "013911"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistical and Computational Foundations of Machine Learning"
    , courseDescription = "Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds, and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "206" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Computer Science and BMath (Data Science) students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "486"
    , courseId = "004435"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Artificial Intelligence"
    , courseDescription = "Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqNote "Computer Science and BMath (Data Science) students only"
        , ReqOr
            [ ReqCoCourse
                ( CourseName "STAT" "206" )
            , ReqCoCourse
                ( CourseName "STAT" "231" )
            , ReqCoCourse
                ( CourseName "STAT" "241" )
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "487"
    , courseId = "004436"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Symbolic Computation"
    , courseDescription = "An introduction to the use of computers for symbolic mathematical computation, involving traditional mathematical computations such as solving linear equations (exactly), analytic differentiation and integration of functions, and analytic solution of differential equations."
    , courseNote = "[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "231" ) Nothing
            , ReqCourse
                ( CourseName "CS" "234" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqNote "Honours Mathematics only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "488"
    , courseId = "004437"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Computer Graphics"
    , courseDescription = "Software and hardware for interactive computer graphics. Implementation of device drivers, 3-D transformations, clipping, perspective, and input routines. Data structures, hidden surface removal, colour shading techniques, and some additional topics will be covered."
    , courseNote = "[Note: This course involves project work.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "CS" "370" ) Nothing
            , ReqCourse
                ( CourseName "CS" "371" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "489"
    , courseId = "010044"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Advanced Topics in Computer Science"
    , courseDescription = "See the Course Offerings List for topics available."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Level at least 3B"
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "490"
    , courseId = "004433"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Information Systems Management"
    , courseDescription = "The integration of business and technical considerations in the design, implementation and management of information systems. Topics include: IS planning and development; business, management, executive, and strategic information systems, including case studies of selected large- scale systems; decision support systems; end-user training and development; systems security, disaster planning and recovery. Practical examples of information systems in industry."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "350" ) Nothing
            , ReqCourse
                ( CourseName "SE" "350" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BUS" "415W" )
                , ReqCoCourse
                    ( CourseName "BUS" "486W" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "492"
    , courseId = "004438"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "The Social Implications of Computing"
    , courseDescription = "This course is designed to consider the problems encountered by individuals, organizations and society as computer technology is adopted, with a view towards assessing possible courses of action."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "240" ) Nothing
            , ReqCourse
                ( CourseName "CS" "240E" ) Nothing
            ]
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "493"
    , courseId = "015545"
    , courseComponents =
        [ "LEC"
        , "PRJ"
        ]
    , courseUnits = 0.5
    , courseTitle = "Team Project 1"
    , courseDescription = "Students work in teams on substantial open-ended computer science problems as part of the CS 493/494 course sequence. Lectures describe project management fundamentals and ethical and legal issues in computing. Students form teams, select projects, define project goals, perform risk assessment, establish a project plan, and develop a prototype. Possible project topics can include development of software systems, analysis of extensions to existing systems across the field, and experimental computer science."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "341" ) Nothing
        , ReqCourse
            ( CourseName "CS" "350" ) Nothing
        , ReqNote "Computer Science students only"
        , ReqNote "Not open to Software Engineering students"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "494"
    , courseId = "015546"
    , courseComponents =
        [ "LEC"
        , "PRJ"
        ]
    , courseUnits = 0.5
    , courseTitle = "Team Project 2"
    , courseDescription = "Continuing from CS 493, student teams continue development of their project, update project plans, explore design alternatives, perform testing, and analyze experimental results. Teams prepare and deliver technical presentations and demonstrations of their projects, and analyze ethical and legal aspects of their work."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "CS" "493" ) Nothing
        , ReqNote "Computer Science students only"
        , ReqNote "Not open to Software Engineering students"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "497"
    , courseId = "012280"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Multidisciplinary Studies in Computer Science"
    , courseDescription = "See the Course Offerings list for topics available."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Level at least 3B"
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "499R"
    , courseId = "004444"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Computer Science"
    , courseDescription = "Reading course as announced by the department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Level at least 3B"
        , ReqNote "Computer Science students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "CS" "499T"
    , courseId = "012560"
    , courseComponents = [ "PRJ" ]
    , courseUnits = 0.5
    , courseTitle = "Honours Thesis"
    , courseDescription = "The student will undertake new analysis, synthesis, measurement, or experimentation to produce a document that demonstrates a depth of understanding of a topic that goes beyond what is obtained in a standard undergraduate education."
    , courseNote = "[Note: Offered for CR/NCR only. CS 499R is recommended.  A detailed thesis proposal and names of a supervisor and reader are required.]"
    , courseOffered = []
    , courseReq = ReqNote "Computer Science students only"
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "52"
    , courseId = "010375"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.0
    , courseTitle = "Pre-University Calculus"
    , courseDescription = "The concepts included are limits, derivatives, antiderivatives and definite integrals.  These concepts will be applied to solve problems of rates of change, maximum and minimum, curve sketching and areas. The classes of functions used to develop these concepts and applications are: polynomial, rational, trigonometric, exponential, and logarithmic."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "97"
    , courseId = "010113"
    , courseComponents = [ "LEC" ]
    , courseUnits = 2.5
    , courseTitle = "Study Abroad"
    , courseDescription = "For studies at other universities under approved exchange agreements."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "103"
    , courseId = "006847"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introductory Algebra for Arts and Social Science"
    , courseDescription = "An introduction to applications of algebra to business, the behavioural sciences, and the social sciences. Topics will be chosen from linear equations, systems of linear equations, linear inequalities, functions, set theory, permutations and combinations, binomial theorem, probability theory. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Open only to students in the following faculties: ARTS, AHS or ENV"
        , ReqNote "Not open to Acc'ting & Fin Mgt students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "104"
    , courseId = "006848"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introductory Calculus for Arts and Social Science"
    , courseDescription = "An introduction to applications of calculus in business, the behavioural sciences, and the social sciences. The models studied will involve polynomial, rational, exponential, and logarithmic functions. The major concepts introduced to solve problems are rate of change, optimization, growth and decay, and integration. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Open only to students in the following Faculties: ARTS, AHS, ENV, SCI"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "106"
    , courseId = "006869"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applied Linear Algebra 1"
    , courseDescription = "Systems of linear equations.  Matrix algebra.  Determinants.  Introduction to vector spaces.  Applications. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "103" ) Nothing
            , ReqNote "4U Calculus and Vectors"
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "114"
    , courseId = "011645"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra for Science"
    , courseDescription = "Vectors in 2- and 3-space and their geometry. Linear equations, matrices, and determinants. Introduction to vector spaces. Eigenvalues and diagonalization.  Applications. Complex numbers. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors"
        , ReqNote "Science or Geomatics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "115"
    , courseId = "006862"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra for Engineering"
    , courseDescription = "Linear equations, matrices and determinants. Introduction to vector spaces.  Eigenvalues and diagonalization. Applications. Complex numbers. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors or 4U Mathematics of Data Management"
        , ReqNote "Engineering students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "116"
    , courseId = "006865"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 1 for Engineering"
    , courseDescription = "Functions: review of polynomials, exponential, logarithmic, trigonometric. Operations on functions, curve sketching. Trigonometric identities, inverse functions. Derivatives, rules of differentiation. Mean Value Theorem, Newton's Method. Indeterminate forms and L'Hopital's rule, applications. Integrals, approximations, Riemann definite integral, Fundamental Theorems. Applications of the integral. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors"
        , ReqNote "Open to students in Engineering excluding Electrical and Computer Eng, Nanotechnology Eng, Software Eng and Systems Design Eng"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "117" )
                , ReqCoCourse
                    ( CourseName "MATH" "124" )
                , ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "117"
    , courseId = "006866"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 1 for Engineering"
    , courseDescription = "Functions of engineering importance; review of polynomial, exponential, and logarithmic functions; trigonometric functions and identities. Inverse functions (logarithmic and trigonometric). Limits and continuity. Derivatives, rules of differentiation; derivatives of elementary functions. Applications of the derivative, max-min problems, Mean Value Theorem. Antiderivatives, the Riemann definite integral, Fundamental Theorems. Methods of integration, approximation, applications, improper integrals. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors"
        , ReqNote "Open only to students in Electrical and Computer Engineering or Software Engineering or Nanotechnology Engineering"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "116" )
                , ReqCoCourse
                    ( CourseName "MATH" "124" )
                , ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "118"
    , courseId = "006867"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 2 for Engineering"
    , courseDescription = "Methods of integration: by parts, trigonometric substitutions, partial fractions; engineering applications, approximation of integrals, improper integrals. Linear and separable first order differential equations, applications. Parametric curves and polar coordinates, arc length and area. Infinite sequences and series, convergence tests, power series and applications. Taylor polynomials and series, Taylor's Remainder Theorem, applications. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        , ReqNote "Open only to students in Engineering excluding students in Electrical and Computer Eng, Nanotechnology Eng, Software Eng and Systems Design Eng"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "119" )
                , ReqCoCourse
                    ( CourseName "MATH" "128" )
                , ReqCoCourse
                    ( CourseName "MATH" "138" )
                , ReqCoCourse
                    ( CourseName "MATH" "148" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "119"
    , courseId = "006868"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 2 for Engineering"
    , courseDescription = "Elementary approximation methods: interpolation; Taylor polynomials and remainder; Newton's method, Landau order symbol, applications. Infinite series: Taylor series and Taylor's Remainder Theorem, geometric series, convergence test, power series, applications. Functions of several variables: partial derivatives, linear approximation and differential, gradient and directional derivative, optimization and Lagrange multipliers. Vector-valued functions:  parametric representation of curves, tangent and normal vectors, line integrals and applications. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        , ReqNote "Open only to students in Electrical and Computer Engineering or Software Engineering or Nanotechnology Engineering"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "118" )
                , ReqCoCourse
                    ( CourseName "MATH" "128" )
                , ReqCoCourse
                    ( CourseName "MATH" "138" )
                , ReqCoCourse
                    ( CourseName "MATH" "148" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "124"
    , courseId = "012879"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus and Vector Algebra for Kinesiology"
    , courseDescription = "Review of trigonometry and basic algebra. Introduction to vectors in 2- and 3-space: sums, addition, dot products, cross products and angles between vectors. Solving linear systems in two and three variables. Functions of a real variable: powers, rational functions, trigonometric, exponential and logarithmic functions, their properties. Intuitive discussion of limits and continuity. Derivatives of elementary functions, derivative rules; applications to curve sketching, optimization. Relationships between distance, velocity, and acceleration. The definite integral, antiderivatives, the Fundamental Theorem of Calculus; change of variable and integration by parts; applications to area, centre of mass. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Advanced Functions"
        , ReqNote "Kinesiology students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "109" )
                , ReqCoCourse
                    ( CourseName "MATH" "116" )
                , ReqCoCourse
                    ( CourseName "MATH" "117" )
                , ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "127"
    , courseId = "006871"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 1 for the Sciences"
    , courseDescription = "Functions of a real variable: powers, rational functions, trigonometric, exponential and logarithmic functions, their properties and inverses. Intuitive discussion of limits and continuity. Definition and interpretation of the derivative, derivatives of elementary functions, derivative rules and applications. Riemann sums and other approximations to the definite integral. Fundamental theorems and antiderivatives; change of variable. Applications to area, rates, average value. [Offered: F,W,S; online: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "104" ) Nothing
            , ReqNote "4U Calculus and Vectors"
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "109" )
                , ReqCoCourse
                    ( CourseName "MATH" "116" )
                , ReqCoCourse
                    ( CourseName "MATH" "117" )
                , ReqCoCourse
                    ( CourseName "MATH" "124" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "128"
    , courseId = "006872"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 2 for the Sciences"
    , courseDescription = "Transforming and evaluating integrals; application to volumes and arc length; improper integrals. Separable and linear first order differential equations and applications. Introduction to sequences. Convergence of series; Taylor polynomials, Taylor's Remainder theorem, Taylor series and applications. Parametric/vector representation of curves; particle motion and arc length. Polar coordinates in the plane. [Offered: F,W,S; online: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "118" )
                , ReqCoCourse
                    ( CourseName "MATH" "119" )
                , ReqCoCourse
                    ( CourseName "MATH" "138" )
                , ReqCoCourse
                    ( CourseName "MATH" "148" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "135"
    , courseId = "006878"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Algebra for Honours Mathematics"
    , courseDescription = "An introduction to the language of mathematics and proof techniques  through a study of the basic algebraic systems of mathematics: the integers, the integers modulo n, the rational numbers, the real numbers, the complex numbers and polynomials. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors or 4U Mathematics of Data Management"
        , ReqNote "Honours Mathematics or Mathematics/BASE or Software Engineering students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "MATH" "145" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "136"
    , courseId = "006879"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra 1 for Honours Mathematics"
    , courseDescription = "Systems of linear equations, matrix algebra, elementary matrices, computational issues. Real n-space, vector spaces and subspaces, basis and dimension, rank of a matrix, linear transformations, and matrix representations. Determinants, eigenvalues and diagonalization, applications. [Offered: F,W,S; online: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqOr
                    [ ReqCourse
                        ( CourseName "MATH" "135" )
                        ( Just 60.0 )
                    , ReqCourse
                        ( CourseName "MATH" "145" ) Nothing
                    ]
                , ReqNote "Honours Mathematics or Mathematics/BASE students"
                ]
            , ReqNote "Science Mathematical Physics students"
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "137"
    , courseId = "006880"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 1 for Honours Mathematics"
    , courseDescription = "Absolute values and inequalities. Sequences and their limits. Introduction to series. Limits of functions and continuity. The Intermediate Value theorem and approximate solutions to equations. Derivatives, linear approximation, and Newton's method. The Mean Value theorem and error bounds. Applications of the Mean Value theorem, Taylor polynomials and Taylor's theorem, Big-O notation. Suitable topics are illustrated using computer software. [Offered: F,W,S; online: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "116" )
                , ReqCoCourse
                    ( CourseName "MATH" "117" )
                , ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "147" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "138"
    , courseId = "006881"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 2 for Honours Mathematics"
    , courseDescription = "Introduction to the Riemann integral and approximations. Antiderivatives and the fundamental theorem of calculus. Change of variables, methods of integration. Applications of the integral. Improper integrals. Linear and separable differential equations and applications. Tests for convergence for series. Binomial series, functions defined as power series and Taylor series. Vector (parametric) curves in R2. Suitable topics are illustrated using computer software. [Offered: F,W,S; online: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "MATH" "137" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "118" )
                , ReqCoCourse
                    ( CourseName "MATH" "119" )
                , ReqCoCourse
                    ( CourseName "MATH" "128" )
                , ReqCoCourse
                    ( CourseName "MATH" "148" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "145"
    , courseId = "006886"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Algebra (Advanced Level)"
    , courseDescription = "MATH 145 is an advanced-level version of MATH 135. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors or 4U Mathematics of Data Management"
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "MATH" "135" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "146"
    , courseId = "006887"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra 1 (Advanced Level)"
    , courseDescription = "MATH 146 is an advanced-level version of MATH 136."
    , courseNote = "[Note: Students who receive a minimum grade of 90% in MATH 135 may contact the instructor of MATH 146 to seek admission without the formal prerequisites. Offered: W]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "145" ) Nothing
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "147"
    , courseId = "006888"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 1 (Advanced Level)"
    , courseDescription = "MATH 147 is an advanced-level version of MATH 137. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "4U Calculus and Vectors"
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "116" )
                , ReqCoCourse
                    ( CourseName "MATH" "117" )
                , ReqCoCourse
                    ( CourseName "MATH" "124" )
                , ReqCoCourse
                    ( CourseName "MATH" "127" )
                , ReqCoCourse
                    ( CourseName "MATH" "137" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "148"
    , courseId = "006889"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 2 (Advanced Level)"
    , courseDescription = "MATH 148 is an advanced-level version of MATH 138."
    , courseNote = "[Note: Students who receive a minimum grade of 90% in MATH 137 may contact the instructor of MATH 148 to seek admission without the formal prerequisites. Offered: W]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "147" ) Nothing
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "118" )
                , ReqCoCourse
                    ( CourseName "MATH" "119" )
                , ReqCoCourse
                    ( CourseName "MATH" "128" )
                , ReqCoCourse
                    ( CourseName "MATH" "138" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "199"
    , courseId = "015595"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Mathematical Discovery and Invention"
    , courseDescription = "A course in problem solving in which intriguing and difficult problems are solved. Problems are taken mainly from the elementary parts of applied mathematics, computer science, statistics and actuarial science, pure mathematics, and combinatorics and optimization. Material relevant to the problems is taught in depth."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "207"
    , courseId = "013105"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 3 (Non-Specialist Level)"
    , courseDescription = "Multivariable functions and partial derivatives. Gradients. Optimization including Lagrange multipliers. Polar coordinates. Multiple integrals. Surface integrals on spheres and cylinders. Introduction to Fourier Series. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "231" )
                , ReqCoCourse
                    ( CourseName "MATH" "212" )
                , ReqCoCourse
                    ( CourseName "MATH" "212N" )
                , ReqCoCourse
                    ( CourseName "NE" "217" )
                , ReqCoCourse
                    ( CourseName "MATH" "217" )
                , ReqCoCourse
                    ( CourseName "MATH" "227" )
                , ReqCoCourse
                    ( CourseName "MATH" "237" )
                , ReqCoCourse
                    ( CourseName "MATH" "247" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "211"
    , courseId = "006891"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Advanced Calculus 1 for Electrical and Computer Engineers"
    , courseDescription = "Fourier series. Ordinary differential equations. Laplace transform. Applications to linear electrical systems. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "119" ) Nothing
        , ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "350" )
                , ReqCoCourse
                    ( CourseName "MATH" "218" )
                , ReqCoCourse
                    ( CourseName "MATH" "228" )
                ]
            )
        ]
    , courseCrosslist =
        [ CourseName "ECE" "205" ]
    }
, Course
    { courseName = CourseName "MATH" "212"
    , courseId = "006892"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Adv Calculus 2 for Electrical Engineers"
    , courseDescription = "Triple integrals, cylindrical and spherical polar coordinates. Divergence and curl, applications. Surface integrals, Green's, Gauss' and Stokes' theorems, applications. Complex functions, analytic functions, contour integrals, Cauchy's integral formula, Laurent series, residues. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "211" ) Nothing
            , ReqCourse
                ( CourseName "ECE" "205" ) Nothing
            ]
        , ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "231" )
                , ReqCoCourse
                    ( CourseName "MATH" "207" )
                , ReqCoCourse
                    ( CourseName "MATH" "217" )
                , ReqCoCourse
                    ( CourseName "MATH" "227" )
                , ReqCoCourse
                    ( CourseName "MATH" "237" )
                , ReqCoCourse
                    ( CourseName "MATH" "247" )
                ]
            )
        ]
    , courseCrosslist =
        [ CourseName "ECE" "206" ]
    }
, Course
    { courseName = CourseName "MATH" "213"
    , courseId = "011849"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Signals, Systems, and Differential Equations"
    , courseDescription = "Laplace transform methods for:  solving linear ordinary differential equations, classical signals, and systems. Transfer functions, poles, and zeros; system stability. Frequency response of linear systems and its log-scale representation (Bode plot). Fourier series. Applications in areas of interest for software engineers and computer scientists. Brief introduction to Fourier transforms in the context of signals and systems."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "250" )
                , ReqCoCourse
                    ( CourseName "AMATH" "251" )
                , ReqCoCourse
                    ( CourseName "MATH" "211" )
                , ReqCoCourse
                    ( CourseName "ECE" "205" )
                , ReqCoCourse
                    ( CourseName "ECE" "218" )
                , ReqCoCourse
                    ( CourseName "ECE" "228" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "215"
    , courseId = "013464"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra for Engineering"
    , courseDescription = "Systems of linear equations; their representation with matrices and vectors; their generalization to linear transformations on abstract vector spaces; and the description of these linear transformations through quantitative characteristics such as the determinant, the characteristic polynomial, eigenvalues and eigenvectors, the rank, and singular values. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Level at least 2A Computer Engineering or Electrical Engineering students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "106" )
                , ReqCoCourse
                    ( CourseName "MATH" "114" )
                , ReqCoCourse
                    ( CourseName "MATH" "115" )
                , ReqCoCourse
                    ( CourseName "MATH" "136" )
                , ReqCoCourse
                    ( CourseName "MATH" "146" )
                , ReqCoCourse
                    ( CourseName "NE" "112" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "217"
    , courseId = "006897"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 3 for Chemical Engineering"
    , courseDescription = "Curves and surfaces in R3. Multivariable functions, partial derivatives, the chain rule, gradients. Optimization, Lagrange Multipliers. Double and triple integrals, change of variable. Vector fields, divergence and curl. Vector integral calculus: Green's theorem, the Divergence theorem and Stokes'  theorem. Applications in engineering are emphasized. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "118" ) Nothing
        , ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "231" )
                , ReqCoCourse
                    ( CourseName "CIVE" "221" )
                , ReqCoCourse
                    ( CourseName "ENVE" "221" )
                , ReqCoCourse
                    ( CourseName "MATH" "207" )
                , ReqCoCourse
                    ( CourseName "MATH" "212" )
                , ReqCoCourse
                    ( CourseName "ECE" "206" )
                , ReqCoCourse
                    ( CourseName "ECE" "227" )
                , ReqCoCourse
                    ( CourseName "ECE" "237" )
                , ReqCoCourse
                    ( CourseName "ECE" "247" )
                , ReqCoCourse
                    ( CourseName "MATH" "212N" )
                , ReqCoCourse
                    ( CourseName "NE" "217" )
                , ReqCoCourse
                    ( CourseName "ME" "201" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "218"
    , courseId = "006898"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Differential Equations for Engineers"
    , courseDescription = "First order equations, second order linear equations with constant coefficients, series solutions, the Laplace transform method, systems of linear differential equations. Applications in engineering are emphasized. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "112" ) Nothing
            ]
        , ReqNote "Engineering or Earth Science students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "250" )
                , ReqCoCourse
                    ( CourseName "AMATH" "251" )
                , ReqCoCourse
                    ( CourseName "AMATH" "350" )
                , ReqCoCourse
                    ( CourseName "AMATH" "351" )
                , ReqCoCourse
                    ( CourseName "CIVE" "222" )
                , ReqCoCourse
                    ( CourseName "ENVE" "223" )
                , ReqCoCourse
                    ( CourseName "MATH" "211" )
                , ReqCoCourse
                    ( CourseName "ECE" "205" )
                , ReqCoCourse
                    ( CourseName "ECE" "228" )
                , ReqCoCourse
                    ( CourseName "MATH" "212N" )
                , ReqCoCourse
                    ( CourseName "NE" "217" )
                , ReqCoCourse
                    ( CourseName "ME" "203" )
                , ReqCoCourse
                    ( CourseName "SYDE" "211" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "225"
    , courseId = "006870"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applied Linear Algebra 2"
    , courseDescription = "Vector spaces. Linear transformations and matrices. Inner products. Eigenvalues and eigenvectors. Diagonalization. Applications. [Offered: F,S; online: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "235" )
                , ReqCoCourse
                    ( CourseName "MATH" "245" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "227"
    , courseId = "006907"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 3 for Honours Physics"
    , courseDescription = "Directional derivative and the chain rule for multivariable functions. Optimization, Lagrange multipliers. Double and triple integrals on simple domains; transformations and Jacobians; change of variable in multiple integrals. Vector fields, divergence and curl. Vector integral calculus: Line and surface integrals, Green's Theorem, Stokes' Theorem, Gauss' Theorem, conservative vector fields. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            ]
        , ReqNote "Only open to Science students in honours plans"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "231" )
                , ReqCoCourse
                    ( CourseName "MATH" "207" )
                , ReqCoCourse
                    ( CourseName "MATH" "212" )
                , ReqCoCourse
                    ( CourseName "ECE" "206" )
                , ReqCoCourse
                    ( CourseName "ECE" "217" )
                , ReqCoCourse
                    ( CourseName "ECE" "237" )
                , ReqCoCourse
                    ( CourseName "ECE" "247" )
                , ReqCoCourse
                    ( CourseName "MATH" "212N" )
                , ReqCoCourse
                    ( CourseName "NE" "217" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "228"
    , courseId = "006908"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Differential Equations for Physics and Chemistry"
    , courseDescription = "First-order equations, second-order linear equations with constant coefficients, series solutions and special functions, the Laplace transform method. Applications in physics and chemistry are emphasized. [Offered: F,W; online: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            ]
        , ReqNote "Not open to Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "AMATH" "250" )
                , ReqCoCourse
                    ( CourseName "AMATH" "251" )
                , ReqCoCourse
                    ( CourseName "AMATH" "350" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "229"
    , courseId = "013104"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Combinatorics (Non-Specialist Level)"
    , courseDescription = "Introduction to graph theory: colourings, connectivity, Eulerian tours, planarity. Introduction to combinatorial analysis: elementary counting, generating series, binary strings. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "135" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "220" )
                , ReqCoCourse
                    ( CourseName "MATH" "239" )
                , ReqCoCourse
                    ( CourseName "MATH" "249" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "235"
    , courseId = "006913"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra 2 for Honours Mathematics"
    , courseDescription = "Orthogonal and unitary matrices and transformations. Orthogonal projections, Gram-Schmidt procedure, best approximations, least-squares. Inner products, angles and orthogonality, orthogonal diagonalization, singular value decomposition, applications. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "MATH" "136" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNote "Honours Mathematics or Mathematical Physics students"
        , ReqOr
            [ ReqCoCourse
                ( CourseName "MATH" "128" )
            , ReqCoCourse
                ( CourseName "MATH" "138" )
            , ReqCoCourse
                ( CourseName "MATH" "148" )
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "225" )
                , ReqCoCourse
                    ( CourseName "MATH" "245" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "237"
    , courseId = "006914"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 3 for Honours Mathematics"
    , courseDescription = "Calculus of functions of several variables. Limits, continuity, differentiability, the chain rule. The gradient vector and the directional derivative. Taylor's formula. Optimization problems. Mappings and the Jacobian. Multiple integrals in various co-ordinate systems."
    , courseNote = "[Note: MATH 247 may be substituted for MATH 237 whenever the latter is a plan requirement. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "MATH" "138" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNote "Honours Math or Math/Physics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "207" )
                , ReqCoCourse
                    ( CourseName "MATH" "212" )
                , ReqCoCourse
                    ( CourseName "ECE" "206" )
                , ReqCoCourse
                    ( CourseName "MATH" "212N" )
                , ReqCoCourse
                    ( CourseName "MATH" "217" )
                , ReqCoCourse
                    ( CourseName "MATH" "227" )
                , ReqCoCourse
                    ( CourseName "MATH" "247" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "239"
    , courseId = "006915"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Combinatorics"
    , courseDescription = "Introduction to graph theory: colourings, matchings, connectivity, planarity. Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqAnd
                [ ReqOr
                    [ ReqCourse
                        ( CourseName "MATH" "106" )
                        ( Just 70.0 )
                    , ReqCourse
                        ( CourseName "MATH" "136" ) Nothing
                    , ReqCourse
                        ( CourseName "MATH" "146" ) Nothing
                    ]
                , ReqOr
                    [ ReqCourse
                        ( CourseName "MATH" "135" )
                        ( Just 60.0 )
                    , ReqCourse
                        ( CourseName "MATH" "145" ) Nothing
                    ]
                ]
            , ReqNote "Level at least 2A Software Engineering"
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "220" )
                , ReqCoCourse
                    ( CourseName "MATH" "229" )
                , ReqCoCourse
                    ( CourseName "MATH" "249" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "245"
    , courseId = "006920"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Linear Algebra 2 (Advanced Level)"
    , courseDescription = "MATH 245 is an advanced-level version of MATH 235. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "146" ) Nothing
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "MATH" "225" )
                , ReqCoCourse
                    ( CourseName "MATH" "235" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "247"
    , courseId = "006921"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Calculus 3 (Advanced Level)"
    , courseDescription = "Topology of real n-dimensional space: completeness, closed and open sets, connectivity, compact sets, continuity, uniform continuity. Differential calculus on multivariable functions: partial differentiability, differentiability, chain rule, Taylor polynomials, extreme value problems. Riemann integration: Jordan content, integrability criteria, Fubini's theorem, change of variables. Local properties of continuously differentiable functions: open mapping theorem, inverse function theorem, implicit function theorem. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "146" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "148" ) Nothing
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqCoCourse
                ( CourseName "MATH" "237" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "MATH" "249"
    , courseId = "006922"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Combinatorics (Advanced Level)"
    , courseDescription = "MATH 249 is an advanced-level version of MATH 239. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "135" )
                ( Just 80.0 )
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CO" "220" )
                , ReqCoCourse
                    ( CourseName "MATH" "229" )
                , ReqCoCourse
                    ( CourseName "MATH" "239" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "320"
    , courseId = "015485"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Euclidean Geometry"
    , courseDescription = "Euclid's axioms, triangle centres, conic sections, compass-and-straightedge constructions, isometries of the Euclidean plane and of Euclidean space, regular and star-shaped polygons, tessellations of the Euclidean plane, regular and quasi-regular polyhedra, symmetries of polygons and polyhedra, four-dimensional polytopes, sphere packings, and the kissing problem. Applications."
    , courseNote = "[Note: This course will be of interest to all math students.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "215" ) Nothing
            , ReqCourse
                ( CourseName "NE" "112" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "104" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "109" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "124" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "321"
    , courseId = "015486"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Non-Euclidean Geometry"
    , courseDescription = "An introduction to three types of non-Euclidean geometry: spherical, projective and hyperbolic geometry. Lines, distances, circles, triangles, and areas in these non-Euclidean spaces. Conic sections in the projective plane. Inversions and orthogonal circles. Models of the hyperbolic plane (such as the Poincaré disc model or the upper-half plane model). Tilings of the hyperbolic plane."
    , courseNote = "[Note: This course will be of interest to all math students.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "106" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "215" ) Nothing
            , ReqCourse
                ( CourseName "NE" "112" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "104" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "109" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "124" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "127" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "PMATH" "360" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "330"
    , courseId = "007659"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Mathematical Logic"
    , courseDescription = "A broad introduction to mathematical logic. The notions of logical consequence and derivation are introduced in the settings of propositional and first order logic, with discussions of the completeness theorem and satisfiability."
    , courseNote = "[Note: PMATH 432 may be substituted for PMATH 330 whenever the latter is a requirement in an Honours plan.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "135" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "145" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "225" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqNote "Not open to Computer Science students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "CS" "245" )
                , ReqCoCourse
                    ( CourseName "CS" "245E" )
                , ReqCoCourse
                    ( CourseName "SE" "212" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "331"
    , courseId = "003323"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Applied Real Analysis"
    , courseDescription = "Topology of Euclidean spaces, continuity, norms, completeness. Contraction mapping principle. Fourier series. Various applications, for example, to ordinary differential equations, optimization and numerical approximation."
    , courseNote = "[Note: PMATH 351 may be substituted for AMATH/PMATH 331 whenever the latter is a requirement in an Honours plan. Offered: F,W]"
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "237" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "247" ) Nothing
        ]
    , courseCrosslist =
        [ CourseName "AMATH" "331" ]
    }
, Course
    { courseName = CourseName "PMATH" "332"
    , courseId = "003324"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applied Complex Analysis"
    , courseDescription = "Complex numbers, Cauchy-Riemann equations, analytic functions, conformal maps and applications to the solution of Laplace's equation, contour integrals, Cauchy integral formula, Taylor and Laurent expansions, residue calculus and applications."
    , courseNote = "[Note: PMATH 352 may be substituted for AMATH/PMATH 332 whenever the latter is a requirement in an Honours plan. Offered: W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "PHYS" "365" )
            )
        ]
    , courseCrosslist =
        [ CourseName "AMATH" "332" ]
    }
, Course
    { courseName = CourseName "PMATH" "333"
    , courseId = "015092"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Real Analysis"
    , courseDescription = "The purpose of the course is to present the familiar concepts of calculus at a rigorous level and to provide students who took the MATH 137/MATH 138/MATH 237 sequence with the background needed to be successful in PMATH 351 and PMATH 352. Topics discussed include the completeness properties of the reals; the density of the rationals; the topology of real n-dimensional space: open and closed sets, connectedness, compactness (by open covers), the Heine-Borel theorem, completeness; sequences in real n-dimensional space: convergence, Cauchy sequences, subsequences, the Bolzano-Weierstrass theorem; multivariable functions: limits, point-wise and uniform continuity, the extreme value theorem, uniform convergence of sequences of functions, Taylor's theorem, term-by-term differentiation of power series; integration in real n-dimensional space: Riemann integrability, Fubini's theorem for continuous functions on rectangles, term-by-term integration of power series."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "MATH" "138" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCoCourse
                ( CourseName "MATH" "235" )
            , ReqCoCourse
                ( CourseName "MATH" "245" )
            ]
        , ReqCoCourse
            ( CourseName "MATH" "237" )
        , ReqNot
            ( ReqCoCourse
                ( CourseName "MATH" "247" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "334"
    , courseId = "007662"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Rings and Fields with Applications"
    , courseDescription = "Rings, ideals, factor rings, homomorphisms, finite and infinite fields, polynomials and roots, field extensions, algebraic numbers, and applications, for example, to Latin squares, finite geometries, geometrical constructions, error-correcting codes."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "235" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "245" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "336"
    , courseId = "007663"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Group Theory with Applications"
    , courseDescription = "Groups, permutation groups, subgroups, homomorphisms, symmetry groups in two and three dimensions, direct products, Polya-Burnside enumeration."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "235" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "245" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "340"
    , courseId = "007664"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Elementary Number Theory"
    , courseDescription = "An elementary approach to the theory of numbers; the Euclidean algorithm, congruence equations, multiplicative functions, solutions to Diophantine equations, continued fractions, and rational approximations to real numbers."
    , courseNote = "[Note: PMATH 440 may be substituted for PMATH 340 whenever the latter is a requirement in an Honours plan.]"
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "225" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "135" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "145" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "343"
    , courseId = "007665"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to the Mathematics of Quantum Information"
    , courseDescription = "Finite dimensional normed vector spaces and inner product spaces. Positive and normal operators, the spectral theorem, and singular value decomposition. Tensor products, finite dimensional C* algebras, and the GNS representation. Completely positive maps, Stinespring's theorem, the Choi-Jamiolkowski isomorphism, and the Choi-Krauss representation. Entanglement and the Bell and Tsirelson inequalities. Vector states and density matrices, quantum channels, observables, and quantum measurement."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "AMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "331" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            , ReqCourse
                ( CourseName "PMATH" "333" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqAnd
                    [ ReqCoCourse
                        ( CourseName "PMATH" "399" )
                    , ReqNote "taken winter"
                    ]
                , ReqCoCourse
                    ( CourseName "PMATH" "2019" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "347"
    , courseId = "014182"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Groups and Rings"
    , courseDescription = "Groups, subgroups, homomorphisms and quotient groups, isomorphism theorems, group actions, Cayley and Lagrange theorems, permutation groups, Sylow theorems, and the fundamental theorem of finite abelian groups. Elementary properties of rings, subrings, ideals, homomorphisms and quotients, isomorphism theorems, and polynomial rings."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "235" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "245" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "348"
    , courseId = "014183"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Fields and Galois Theory"
    , courseDescription = "Unique factorization domains, Gauss's lemma, and Eisenstein's criterion. Fields, algebraic and transcendental extensions, minimal polynomials, splitting fields, and the structure of finite fields. Galois theory. Solvable groups and the insolvability of the quintic."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "347" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "351"
    , courseId = "007669"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Real Analysis"
    , courseDescription = "Normed and metric spaces, open sets, continuous mappings, sequence and function spaces, completeness, contraction mappings, compactness of metric spaces, finite-dimensional normed spaces, Arzela-Ascoli theorem, existence of solutions of differential equations, Stone-Weierstrass theorem."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "247" ) Nothing
        , ReqCourse
            ( CourseName "PMATH" "333" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "352"
    , courseId = "007672"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Complex Analysis"
    , courseDescription = "Analytic functions, Cauchy-Riemann equations, Goursat's theorem, Cauchy's theorems, Morera's theorem, Liouville's theorem, maximum modulus principle, harmonic functions, Schwarz's lemma, isolated singularities, Laurent series, residue theorem."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "247" ) Nothing
        , ReqCourse
            ( CourseName "PMATH" "333" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "365"
    , courseId = "003325"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Differential Geometry"
    , courseDescription = "Submanifolds of Euclidean n-space; vector fields and differential forms; integration on submanifolds and Stokes's Theorem; metrics and geodesics; Gauss-Bonnet Theorem."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "370"
    , courseId = "009496"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Chaos and Fractals"
    , courseDescription = "The mathematics of iterated functions, properties of discrete dynamical systems, Mandelbrot and Julia sets."
    , courseNote = "[Note: Programming experience on one computer language with graphical output is recommended.]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "114" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "115" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "146" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "225" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "399"
    , courseId = "007680"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Pure Mathematics"
    , courseDescription = "Reading course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "432"
    , courseId = "007687"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "First Order Logic and Computability"
    , courseDescription = "The concepts of formal provability and logical consequence in first order logic are introduced, and their equivalence is proved in the soundness and completeness theorems. Goedel's incompleteness theorem is discussed, making use of the halting problem of computability theory. Relative computability and the Turing degrees are further studied."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "347" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "433"
    , courseId = "012623"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Model Theory and Set Theory"
    , courseDescription = "Model theory: the semantics of first order logic including the compactness theorem and its consequences, elementary embeddings and equivalence, the theory of definable sets and types, quantifier elimination, and omega-stability. Set theory: well-orderings, ordinals, cardinals, Zermelo-Fraenkel axioms, axiom of choice, informal discussion of classes and independence results."
    , courseNote = "[Note: PMATH 348 is highly recommended.]"
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "347" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "440"
    , courseId = "007690"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Analytic Number Theory"
    , courseDescription = "Summation methods, analytic theory of the Riemann zeta function, Prime Number Theorem, primitive roots, quadratic reciprocity. Dirichlet characters and infinitude of primes in arithmetic progressions, and assorted topics."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "352" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "441"
    , courseId = "007691"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Algebraic Number Theory"
    , courseDescription = "An introduction to algebraic number theory; unique factorization, Dedekind domains, class numbers, Dirichlet's unit theorem, solutions of Diophantine equations."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "348" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "445"
    , courseId = "014184"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Representations of Finite Groups"
    , courseDescription = "Basic definitions and examples: subrepresentations and irreducible representations, tensor products of representations. Character theory. Representations as modules over the group ring, Artin-Wedderburn structure theorem for semisimple rings. Induced representations, Frobenius reciprocity, Mackey's irreducibility criterion."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "347" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "446"
    , courseId = "014185"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Commutative Algebra"
    , courseDescription = "Module theory: classification of finitely generated modules over PIDs, exact sequences and tensor products, algebras, localisation, chain conditions. Primary decomposition, integral extensions, Noether's normalisation lemma, and Hilbert's Nullstellensatz."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "348" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "450"
    , courseId = "007674"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Lebesgue Integration and Fourier Analysis"
    , courseDescription = "Lebesgue measure on the line, the Lebesgue integral, monotone and dominated convergence theorems, Lp-spaces: completeness and dense subspaces. Separable Hilbert space, orthonormal bases. Fourier analysis on the circle, Dirichlet kernel, Riemann-Lebesgue lemma, Fejer's theorem, and convergence of Fourier series."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "351" )
        ( Just 60.0 )
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "451"
    , courseId = "003348"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Measure and Integration"
    , courseDescription = "General measures, measurability, Caratheodory Extension theorem and construction of measures, integration theory, convergence theorems, Lp-spaces, absolute continuity, differentiation of monotone functions, Radon-Nikodym theorem, product measures, Fubini's theorem, signed measures, Urysohn's lemma, Riesz Representation theorems for classical Banach spaces."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "450" )
        ( Just 60.0 )
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "453"
    , courseId = "003349"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Functional Analysis"
    , courseDescription = "Banach and Hilbert spaces, bounded linear maps, Hahn-Banach theorem, open mapping theorem, closed graph theorem, topologies, nets, Hausdorff spaces, Tietze extension theorem, dual spaces, weak topologies, Tychonoff's theorem, Banach-Alaoglu theorem, reflexive spaces."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "450" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "464"
    , courseId = "010733"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Algebraic Geometry"
    , courseDescription = "An introduction to algebraic geometry through the theory of algebraic curves. General algebraic geometry: affine and projective algebraic sets, Hilbert's Nullstellensatz, co-ordinate rings, polynomial maps, rational functions and local rings. Algebraic curves: affine and projective plane curves, tangency and multiplicity, intersection numbers, Bezout's theorem and divisor class groups."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "348" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "465"
    , courseId = "003350"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Smooth Manifolds"
    , courseDescription = "Point-set topology; smooth manifolds, smooth maps, and tangent vectors; the tangent and cotangent bundles; vector fields, tensor fields, and differential forms; Stokes's theorem; integral curves, Lie derivatives, the Frobenius theorem; de Rham cohomology."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "PMATH" "365" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "467"
    , courseId = "007704"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Algebraic Topology"
    , courseDescription = "Topological spaces and topological manifolds; quotient spaces; cut and paste constructions; classification of two-dimensional manifolds; fundamental group; homology groups. Additional topics may include: covering spaces; homotopy theory; selected applications to knots and combinatorial group theory."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "PMATH" "347" ) Nothing
        , ReqCourse
            ( CourseName "PMATH" "351" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "PMATH" "499"
    , courseId = "007706"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Pure Mathematics"
    , courseDescription = "Reading course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "202"
    , courseId = "008859"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introductory Statistics for Scientists"
    , courseDescription = "Elementary probability, populations, samples, and distributions with biological examples. Methods for data summary and presentation. Estimation, hypothesis testing, two-sample techniques and paired comparisons, regression, correlation. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqNote "Science or Knowledge Integration students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "220" )
                , ReqCoCourse
                    ( CourseName "STAT" "230" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "206"
    , courseId = "010128"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistics for Software Engineering"
    , courseDescription = "Empirical problem solving with applications to software engineering. An introduction to probability theory. An introduction to distribution theory and to methods of statistical inference, including confidence intervals and hypothesis testing. An introduction to regression. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "115" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "119" ) Nothing
        , ReqNote "Software Eng students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "211"
    , courseId = "008861"
    , courseComponents =
        [ "LAB"
        , "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introductory Statistics and Sampling for Accounting"
    , courseDescription = "Descriptive statistics, probability, discrete and continuous random variables. Sampling distributions and simple hypothesis testing. Introduction to survey sampling. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "MATH" "109" ) Nothing
        , ReqNote "Arts/Acc and SciBiot/CA students only"
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "220"
    , courseId = "008862"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Probability (Non-Specialist Level)"
    , courseDescription = "The laws of probability, discrete and continuous random variables, expectation, central limit theorem. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "202" )
                , ReqCoCourse
                    ( CourseName "STAT" "230" )
                , ReqCoCourse
                    ( CourseName "STAT" "240" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "221"
    , courseId = "008863"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistics (Non-Specialist Level)"
    , courseDescription = "Empirical problem solving, measurement systems, causal relationships, statistical models, estimation, confidence intervals, tests of significance. [Offered: F, W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "220" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "231" )
                , ReqCoCourse
                    ( CourseName "STAT" "241" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "230"
    , courseId = "008864"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Probability"
    , courseDescription = "This course provides an introduction to probability models including sample spaces, mutually exclusive and independent events, conditional probability and Bayes' Theorem. The named distributions (Discrete Uniform, Hypergeometric, Binomial, Negative Binomial, Geometric, Poisson, Continuous Uniform, Exponential, Normal (Gaussian), and Multinomial) are used to model real phenomena. Discrete and continuous univariate random variables and their distributions are discussed. Joint probability functions, marginal probability functions, and conditional probability functions of two or more discrete random variables and functions of random variables are also discussed. Students learn how to calculate and interpret means, variances and covariances particularly for the named distributions. The Central Limit Theorem is used to approximate probabilities."
    , courseNote = "[Note: Many upper-year Statistics courses require a grade of at least 60% in STAT 230. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "116" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "117" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNote "Honours Math or Math/Phys students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "220" )
                , ReqCoCourse
                    ( CourseName "STAT" "240" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "231"
    , courseId = "008865"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistics"
    , courseDescription = "This course provides a systematic approach to empirical problem solving which will enable students to critically assess the sampling protocol and conclusions of an empirical study including the possible sources of error in the study and whether evidence of a causal relationship can be reasonably concluded. The connection between the attributes of a population and the parameters in the named distributions covered in STAT 230 will be emphasized. Numerical and graphical techniques for summarizing data and checking the fit of a statistical model will be discussed. The method of maximum likelihood will be used to obtain point and interval estimates for the parameters of interest as well as testing hypotheses. The interpretation of confidence intervals and p-values will be emphasized. The Chi-squared and t distributions will be introduced and used to construct confidence intervals and tests of hypotheses including likelihood ratio tests. Contingency tables and Gaussian response models including the two sample Gaussian and simple linear regression will be used as examples."
    , courseNote = "[Note: Many upper-year Statistics courses require a grade of at least 60% in STAT 231. Offered: F,W,S]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "118" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "119" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "128" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "220" )
                ( Just 70.0 )
            , ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Honours Math or Math/Phys students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "221" )
                , ReqCoCourse
                    ( CourseName "STAT" "241" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "240"
    , courseId = "008866"
    , courseComponents =
        [ "LEC"
        , "TST"
        ]
    , courseUnits = 0.5
    , courseTitle = "Probability (Advanced Level)"
    , courseDescription = "STAT 240 is an advanced-level enriched version of STAT 230. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "137" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "147" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqNote "Honours Mathematics students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "220" )
                , ReqCoCourse
                    ( CourseName "STAT" "230" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "241"
    , courseId = "008867"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistics (Advanced Level)"
    , courseDescription = "STAT 241 is an advanced-level enriched version of STAT 231."
    , courseNote = "[Note: Students with a cumulative math average of at least 80% are encouraged to register in STAT 241. Offered: W]"
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "138" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "148" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "230" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqNote "Hon Math only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "221" )
                , ReqCoCourse
                    ( CourseName "STAT" "231" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "316"
    , courseId = "004384"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Statistical Problem Solving"
    , courseDescription = "This is an applications oriented course which prepares the nonmathematical student to use statistical software as a research tool. Topics include aids for statistical analysis and the preparation of documents such as reports and theses. The course provides sufficient background for application to other problems specific to the individual's field.  [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "ECON" "221" ) Nothing
            , ReqCourse
                ( CourseName "ENVS" "278" ) Nothing
            , ReqCourse
                ( CourseName "HLTH" "204" ) Nothing
            , ReqCourse
                ( CourseName "SDS" "250R" ) Nothing
            , ReqCourse
                ( CourseName "KIN" "232" ) Nothing
            , ReqCourse
                ( CourseName "PSCI" "214" ) Nothing
            , ReqCourse
                ( CourseName "PSCI" "314" ) Nothing
            , ReqCourse
                ( CourseName "PSYCH" "292" ) Nothing
            , ReqCourse
                ( CourseName "REC" "371" ) Nothing
            , ReqCourse
                ( CourseName "SOC" "280" ) Nothing
            , ReqCourse
                ( CourseName "LS" "280" ) Nothing
            , ReqNote "any STAT course"
            ]
        , ReqNote "Not open to Honours Mathematics students"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "331" )
                , ReqCoCourse
                    ( CourseName "STAT" "371" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "321"
    , courseId = "008870"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Regression and Forecasting (Non-Specialist Level)"
    , courseDescription = "Modeling the relationship between a response variable and several explanatory variables via regression models. Model diagnostics and improvement. Using regression models for forecasting, Exponential smoothing. Simple time series modeling. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "225" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "221" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "331" )
                , ReqCoCourse
                    ( CourseName "STAT" "371" )
                , ReqCoCourse
                    ( CourseName "STAT" "373" )
                , ReqCoCourse
                    ( CourseName "STAT" "443" )
                , ReqCoCourse
                    ( CourseName "AFM" "323" )
                , ReqCoCourse
                    ( CourseName "STAT" "374" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "322"
    , courseId = "008871"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Sampling and Experimental Design (Non-Specialist Level)"
    , courseDescription = "Planning sample surveys; simple random sampling; stratified sampling. Observational and experimental studies. Blocking, randomization, factorial designs. Analysis of variance. Applications of design principles. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "221" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "332" )
                , ReqCoCourse
                    ( CourseName "STAT" "372" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "330"
    , courseId = "008872"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Mathematical Statistics"
    , courseDescription = "This course provides a mathematically rigorous treatment for topics covered in STAT 230 and 231, and to make essential extensions to the multivariate case. Maximum likelihood estimation. Random variables and distribution theory. Generating functions. Functions of random variables. Limiting distributions. Large sample theory of likelihood methods. Likelihood ratio tests.   Joint probability (density) functions, marginal probability (density) functions, and conditional probability (density) functions of two or more random variables are discussed. Topics covered include independence of random variables, conditional expectation and the determination of the distribution of functions of random variables using the cumulative distribution method, change of variable and moment generating functions.  Properties of the Multinomial and Bivariate Normal distributions are proved. Limiting distributions, including convergence in probability and convergence in distribution, are discussed. Important results, including the Weak Law of Large Numbers, Central Limit Theorem, Slutsky's theorem, and the Delta Method, are introduced with applications. The maximum likelihood method is discussed for the multi-parameter case. Asymptotic properties of the maximum likelihood estimator are examined and used to construct confidence intervals or regions. Tests for simple and composite hypotheses are constructed using the Likelihood Ratio Test. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "STAT" "334" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "331"
    , courseId = "008873"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applied Linear Models"
    , courseDescription = "Modeling the relationship between a response variable and several explanatory variables (an output-input system) via regression models. Least squares algorithm for estimation of parameters. Hypothesis testing and prediction. Model diagnostics and improvement. Algorithms for variable selection. Nonlinear regression and other methods. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "212" )
                ( Just 70.0 )
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "ECON" "421" )
                , ReqCoCourse
                    ( CourseName "STAT" "321" )
                , ReqCoCourse
                    ( CourseName "STAT" "371" )
                , ReqCoCourse
                    ( CourseName "STAT" "373" )
                , ReqCoCourse
                    ( CourseName "AFM" "323" )
                , ReqCoCourse
                    ( CourseName "STAT" "374" )
                , ReqCoCourse
                    ( CourseName "SYDE" "334" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "332"
    , courseId = "008874"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Sampling and Experimental Design"
    , courseDescription = "Designing sample surveys. Probability sampling designs. Estimation with elementary designs. Observational and experimental studies. Blocking, randomization, factorial designs. Analysis of variance. Designing for comparison of groups. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "212" )
                ( Just 70.0 )
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "BIOL" "361" )
                , ReqCoCourse
                    ( CourseName "STAT" "322" )
                , ReqCoCourse
                    ( CourseName "STAT" "372" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "333"
    , courseId = "008875"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Stochastic Processes 1"
    , courseDescription = "This course provides an introduction to stochastic processes, with an emphasis on regenerative phenomena. Topics cover generating functions, conditional probability distributions and conditional expectation, discrete-time Markov chains with a countable state space, limit distributions for ergodic and absorbing chains, applications including the random walk, the gambler's ruin problem, and the Galton-Watson branching process, an introduction to counting processes, connections between the exponential distribution and Poisson process, and non-homogeneous and compound Poisson processes. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "230" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            ]
        , ReqNot
            ( ReqCoCourse
                ( CourseName "STAT" "334" )
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "334"
    , courseId = "012662"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Probability Models for Business and Accounting"
    , courseDescription = "Random variables and distribution theory, conditional expectations, moment and probability generating functions, change of variables, random walks, Markov chains, Markov processes. [Offered F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "237" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "247" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "230" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Business/Math double degree, Mathematics/CPA or Math/Business students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "330" )
                , ReqCoCourse
                    ( CourseName "STAT" "333" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "337"
    , courseId = "013320"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to Biostatistics"
    , courseDescription = "This course will provide an introduction to statistical methods in health research. Topics to be covered include types of medical data, measures of disease prevalence and incidence, age and sex adjustment of disease rates, sensitivity and specificity of diagnostic tests, ROC curves, measures of association between risk factors and disease, major sources of medical data in the Canadian context including surveys, registries, and clinical studies such as cohort studies, clinical trials and case-control studies. Papers from the medical literature will be used throughout to illustrate the concepts. Introduction to SAS for data analysis and an introduction to database management tools. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "221" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "HLTH" "333" )
                , ReqCoCourse
                    ( CourseName "STAT" "232" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "340"
    , courseId = "004408"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Stochastic Simulation Methods"
    , courseDescription = "Random variate generation in the univariate and multivariate case, Monte Carlo integration, advanced computer implementation, variance reduction, statistical analysis of simulated data, extensions to challenging simulation problems. Mathematical treatment of the underlying stochastic concepts and proofs. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "CS" "116" ) Nothing
            , ReqCourse
                ( CourseName "CS" "136" ) Nothing
            , ReqCourse
                ( CourseName "CS" "138" ) Nothing
            , ReqCourse
                ( CourseName "CS" "145" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "221" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "322" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "230" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "240" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "231" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "341"
    , courseId = "011431"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Computational Statistics and Data Analysis"
    , courseDescription = "A computationally focused approach to statistical reasoning in the context of real data. Functional programming in R and algorithms will be used to define interesting attributes of finite populations and their sampling characteristics. Computational approaches to inductive inference and the assessment of predictive accuracy. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "MATH" "237" ) Nothing
        , ReqCourse
            ( CourseName "MATH" "247" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "230" )
            ( Just 60.0 )
        , ReqCourse
            ( CourseName "STAT" "240" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "231" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "241" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "371"
    , courseId = "011723"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Applied Linear Models and Process Improvement for Business"
    , courseDescription = "Practical and theoretical aspects of simple and multiple linear regression models. Model building, fitting, and assessment. Process thinking and improvement. Strategies for variation reduction such as control charting. Process monitoring, control, and adjustment. Applications to problems in business. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "235" ) Nothing
            , ReqCourse
                ( CourseName "MATH" "245" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Bus/Math dbl degree, Math/Bus, Math/FARM, Math/ITM, or Math Optimization - Business Spec students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "321" )
                , ReqCoCourse
                    ( CourseName "STAT" "331" )
                , ReqCoCourse
                    ( CourseName "STAT" "374" )
                , ReqCoCourse
                    ( CourseName "STAT" "373" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "372"
    , courseId = "011724"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Survey Sampling and Experimental Design Techniques for Business"
    , courseDescription = "Design and analysis of surveys. Management of sample and non-sample error. Simple random sampling and stratified random sampling. Additional topics in survey sampling. Observational and experimental studies. Principles for the design of experiments. Analysis of variance, factorial experiments, and interaction. Application to problems in business. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Business/Math Double Degree, Math/Business, Math/FARM, Math/ITM or Mathematical Optimization - Business Specialization students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "322" )
                , ReqCoCourse
                    ( CourseName "STAT" "332" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "373"
    , courseId = "012225"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Regression and Forecasting Methods in Finance"
    , courseDescription = "Application of regression and time series models in finance; multiple regression; algebraic and geometric representation of least squares; inference methods - confidence intervals and hypothesis tests, ANOVA, prediction; model building and assessment; time series modeling; autoregressive AR(1) models - fitting, assessment and prediction; moving average smoothing, seasonal adjustment; non-stationarity and differencing. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Computing & Financial Management or Math/CPA students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "321" )
                , ReqCoCourse
                    ( CourseName "STAT" "331" )
                , ReqCoCourse
                    ( CourseName "STAT" "371" )
                , ReqCoCourse
                    ( CourseName "STAT" "443" )
                , ReqCoCourse
                    ( CourseName "AFM" "323" )
                , ReqCoCourse
                    ( CourseName "STAT" "374" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "374"
    , courseId = "013727"
    , courseComponents =
        [ "LEC"
        , "TST"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Quantitative Foundations for Finance"
    , courseDescription = "This course introduces analytical and statistical methods commonly used in finance, with applications to investment management and corporate finance."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "MATH" "136" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "231" )
                ( Just 60.0 )
            , ReqCourse
                ( CourseName "STAT" "241" ) Nothing
            ]
        , ReqNote "Computing & Financial Management or Math/CPA students only"
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "321" )
                , ReqCoCourse
                    ( CourseName "STAT" "331" )
                , ReqCoCourse
                    ( CourseName "STAT" "371" )
                , ReqCoCourse
                    ( CourseName "STAT" "443" )
                , ReqCoCourse
                    ( CourseName "AFM" "323" )
                , ReqCoCourse
                    ( CourseName "STAT" "374" )
                ]
            )
        ]
    , courseCrosslist =
        [ CourseName "AFM" "323" ]
    }
, Course
    { courseName = CourseName "STAT" "430"
    , courseId = "008880"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Experimental Design"
    , courseDescription = "Review of experimental designs in a regression setting; analysis of variance; replication, balance, blocking, randomization, and interaction; one-way layout, two-way layout, and Latin square as special cases; factorial structure of treatments; covariates; treatment contrasts; two-level fractional factorial designs; fixed versus random effects; split-plot and repeated-measures designs; other topics. [Offered: F,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "331" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "371" ) Nothing
            ]
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "332" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "372" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqNote "for Arts and Environmental Studies students"
                , ReqCoCourse
                    ( CourseName "BIOL" "461" )
                , ReqCoCourse
                    ( CourseName "PSYCH" "391" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "431"
    , courseId = "008881"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Generalized Linear Models and their Applications"
    , courseDescription = "Review of the normal linear model and maximum likelihood estimation; regression models for binomial, Poisson and multinomial data; generalized linear models; and other topics in regression modelling. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "STAT" "330" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "331" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "371" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "433"
    , courseId = "008882"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Stochastic Processes 2"
    , courseDescription = "This course provides further ideas and methods in stochastic modelling, with an emphasis on continuous-time stochastic processes. Topics cover time to absorption based quantities and discrete phase-type distributions of discrete-time Markov chains, continuous-time Markov chains with a countable state space, limit distributions for ergodic and absorbing chains, and applications including birth and death processes and queueing models of practical interest. Other topics may include continuous phase-type distributions, renewal theory and limit theorems for regenerative processes, and phase-type renewal processes. [Offered: F]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "333" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "435"
    , courseId = "011042"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistical Methods for Process Improvements"
    , courseDescription = "Statistical methods for improving processes based on observational data. Assessment of measurement systems. Strategies for variation reduction. Process monitoring, control, and adjustment. Clue generation techniques for determining the sources of variability. Variation transmission. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "STAT" "332" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "372" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "436"
    , courseId = "013322"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Introduction to the Analysis of Spatial Data in Health Research"
    , courseDescription = "The objective of this course is to develop understanding and working knowledge of spatial models and analysis of spatial data. The course provides an introduction to the rudiments of statistical inference based on spatially correlated data. Methods of estimation and testing will be developed for geostatistical models based on variograms and spatial autogressive models. Concepts and application of methods will be emphasized through case studies and projects with health applications. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "431" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "437"
    , courseId = "013321"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Statistical Methods for Life History Analysis"
    , courseDescription = "Statistical methods for the analysis of longitudinal data; hierarchical models, marginal models, and transitional models. Parametric and semiparametric methods for the analysis of survival data under censoring and truncation. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "431" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "438"
    , courseId = "015598"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Advanced Methods in Biostatistics"
    , courseDescription = "Causal inference methodologies including propensity score matching and inverse probability weighting. Methods for handling incomplete data and covariate measurement error; likelihood based on joint models, estimating functions."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "431" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "440"
    , courseId = "008883"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Computational Inference"
    , courseDescription = "Introduction to and application of computational methods in statistical inference. Monte Carlo evaluation of statistical procedures, exploration of the likelihood function through graphical and optimization techniques. Topics include expectation-maximization, Bootstrapping, Markov Chain Monte Carlo, and other computationally intensive methods. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "STAT" "330" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "341" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "441"
    , courseId = "008884"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Statistical Learning - Classification"
    , courseDescription = "Classification is the problem of predicting a discrete outcome from a set of explanatory variables. Main topics include logistic regression, neural networks, tree-based methods, support vector machines, and nearest neighbour methods. Other topics include model assessment, training, and tuning. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "STAT" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "331" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "371" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "442"
    , courseId = "011434"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Data Visualization"
    , courseDescription = "Visualization methods applied to data. Both human perception and statistical properties inform the methods used to display and visually explore categorical, continuous, time-ordered, map, and high dimensional data. Order and layout effects on tables and graphics. Statistical concepts visually presented include variability, densities, quantiles, conditioning, and hypothesis testing. Interactive graphics include linking, brushing, motion, and the navigation of high dimensional spaces guided via projection indices. Glyphs (e.g., cartoon, statistical, or heatmap) and radial and parallel coordinates. [Offered: F,W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "341" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "443"
    , courseId = "008885"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Forecasting"
    , courseDescription = "Modelling techniques for forecasting time series data: smoothing methods,  regression including penalty/regularization methods, the Box-Jenkins framework, stationary and non-stationary processes, both with and without seasonal effects. Other topics may include: ARCH/GARCH models, Bayesian methods, dynamic linear models, Markov Chain Monte Carlo simulation, spectral density analysis, and periodograms. [Offered: F,W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqOr
            [ ReqCourse
                ( CourseName "STAT" "331" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "371" ) Nothing
            , ReqCourse
                ( CourseName "SYDE" "334" ) Nothing
            ]
        , ReqNot
            ( ReqOr
                [ ReqCoCourse
                    ( CourseName "STAT" "321" )
                , ReqCoCourse
                    ( CourseName "STAT" "373" )
                ]
            )
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "444"
    , courseId = "011436"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Statistical Learning - Advanced Regression"
    , courseDescription = "This course introduces modern applied regression methods for continuous response modelling, emphasizing both explainability and predictive power. Topics cover a wide selection of advanced methods useful to address the challenges arising from real-world and high-dimensional data; methods include robust regression, nonparametric regression such as smoothing splines, kernels, additive models, tree-based methods, boosting and bagging, and penalized linear regression methods such as the ridge regression, lasso, and their variants. Students will gain an appreciation of the mathematical and statistical concepts underlying the methods and also computational experience in applying the methods to real data. [Offered: W,S]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "STAT" "341" ) Nothing
        , ReqOr
            [ ReqCourse
                ( CourseName "STAT" "331" ) Nothing
            , ReqCourse
                ( CourseName "STAT" "371" ) Nothing
            ]
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "450"
    , courseId = "008888"
    , courseComponents =
        [ "LEC"
        , "TUT"
        ]
    , courseUnits = 0.5
    , courseTitle = "Estimation and Hypothesis Testing"
    , courseDescription = "Discussion of inference problems under the headings of hypothesis testing and point and interval estimation. Frequentist and Bayesian approaches to inference. Construction and evaluation of tests and estimators. Large sample theory of point estimation. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "330" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "454"
    , courseId = "008890"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Sampling Theory and Practice"
    , courseDescription = "Sources of survey error. Probability sampling designs, estimation, and efficiency comparisons. Distribution theory and confidence intervals. Generalized regression estimation. Software for survey analysis. [Offered: W]"
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqOr
        [ ReqCourse
            ( CourseName "STAT" "332" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "372" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "464"
    , courseId = "008891"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Probability Theory"
    , courseDescription = "Special Topics course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqCourse
        ( CourseName "STAT" "333" ) Nothing
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "466"
    , courseId = "008892"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Statistics 1"
    , courseDescription = "Special topics course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd
        [ ReqCourse
            ( CourseName "STAT" "330" ) Nothing
        , ReqCourse
            ( CourseName "STAT" "331" ) Nothing
        ]
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "467"
    , courseId = "008893"
    , courseComponents = [ "LEC" ]
    , courseUnits = 0.5
    , courseTitle = "Topics in Statistics 2"
    , courseDescription = "Special topics course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "468"
    , courseId = "008894"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Statistics 1"
    , courseDescription = "Reading course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
, Course
    { courseName = CourseName "STAT" "469"
    , courseId = "010728"
    , courseComponents = [ "RDG" ]
    , courseUnits = 0.5
    , courseTitle = "Readings in Statistics 2"
    , courseDescription = "Reading course as announced by the Department."
    , courseNote = ""
    , courseOffered = []
    , courseReq = ReqAnd []
    , courseCrosslist = []
    }
]
